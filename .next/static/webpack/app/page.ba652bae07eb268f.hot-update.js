"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/services/LipSyncProvider.tsx":
/*!**********************************************!*\
  !*** ./src/app/services/LipSyncProvider.tsx ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LipsyncEn: () => (/* binding */ LipsyncEn),\n/* harmony export */   LipsyncTa: () => (/* binding */ LipsyncTa)\n/* harmony export */ });\nclass LipsyncEn {\n    convert_digit_by_digit(num) {\n        const numArray = num.split(\"\");\n        let numWords = \"\";\n        for(let m = 0; m < numArray.length; m++){\n            numWords += this.digits[numArray[m]] + \" \";\n        }\n        numWords = numWords.substring(0, numWords.length - 1); //kill final space\n        return numWords;\n    }\n    convert_sets_of_two(num) {\n        let firstNumHalf = String(num).substring(0, 2);\n        let secondNumHalf = String(num).substring(2, 4);\n        let numWords = this.convert_tens(firstNumHalf);\n        numWords += \" \" + this.convert_tens(secondNumHalf);\n        return numWords;\n    }\n    convert_millions(num) {\n        if (Number(num) >= 1000000) {\n            return this.convert_millions(Math.floor(Number(num) / 1000000).toString()) + \" million \" + this.convert_thousands((Number(num) % 1000000).toString());\n        } else {\n            return this.convert_thousands(num);\n        }\n    }\n    convert_thousands(num) {\n        if (Number(num) >= 1000) {\n            return this.convert_hundreds(Math.floor(Number(num) / 1000).toString()) + \" thousand \" + this.convert_hundreds((Number(num) % 1000).toString());\n        } else {\n            return this.convert_hundreds(num);\n        }\n    }\n    convert_hundreds(num) {\n        if (Number(num) > 99) {\n            return this.ones[Math.floor(Number(num) / 100)] + \" hundred \" + this.convert_tens((Number(num) % 100).toString());\n        } else {\n            return this.convert_tens(num);\n        }\n    }\n    convert_tens(num) {\n        if (Number(num) < 10) {\n            return (Number(num) != 0 && num.toString().startsWith(\"0\") ? \"oh \" : \"\") + this.ones[Number(num)];\n        } else if (Number(num) >= 10 && Number(num) < 20) {\n            return this.teens[Number(num) - 10];\n        } else {\n            return this.tens[Math.floor(Number(num) / 10)] + \" \" + this.ones[Number(num) % 10];\n        }\n    }\n    convertNumberToWords(num) {\n        if (num == \"0\") {\n            return \"zero\";\n        } else if (num.startsWith(\"0\")) {\n            return this.convert_digit_by_digit(num);\n        } else if (Number(num) < 1000 && Number(num) > 99 || Number(num) > 10000 && Number(num) < 1000000) {\n            //read area and zip codes digit by digit\n            return this.convert_digit_by_digit(num);\n        } else if (Number(num) > 1000 && Number(num) < 2000 || Number(num) > 2009 && Number(num) < 3000) {\n            //read years as two sets of two digits\n            return Number(num) % 100 != 0 ? this.convert_sets_of_two(num) : this.convert_tens(num.substring(0, 2)) + \" hundred\";\n        } else {\n            return this.convert_millions(num);\n        }\n    }\n    preProcessText(s) {\n        return s.replace(/[#_*\":;]/g, \"\").replace(this.symbolsReg, (symbol)=>{\n            return \" \" + this.symbols[symbol] + \" \";\n        }).replace(/(\\d)\\.(\\d)/g, \"$1 point $2\") // Number separator\n        .replace(/\\d+/g, this.convertNumberToWords.bind(this)) // Numbers to words\n        .replace(/(\\D)\\1\\1+/g, \"$1$1\") // max 2 repeating chars\n        .replaceAll(\"  \", \" \") // Only one repeating space\n        .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").normalize(\"NFC\") // Remove non-English diacritics\n        .trim();\n    }\n    wordsToVisemes(w) {\n        let o = {\n            words: w.toUpperCase(),\n            visemes: [],\n            times: [],\n            durations: [],\n            i: 0\n        };\n        let t = 0;\n        const chars = [\n            ...o.words\n        ];\n        while(o.i < chars.length){\n            const c = chars[o.i];\n            const ruleset = this.rules[c];\n            if (ruleset) {\n                for(let i = 0; i < ruleset.length; i++){\n                    const rule = ruleset[i];\n                    const test = o.words.substring(0, o.i) + c.toLowerCase() + o.words.substring(o.i + 1);\n                    let matches = test.match(rule.regex);\n                    if (matches) {\n                        rule.visemes.forEach((viseme)=>{\n                            if (o.visemes.length && o.visemes[o.visemes.length - 1] === viseme) {\n                                const d = 0.7 * (this.visemeDurations[viseme] || 1);\n                                o.durations[o.durations.length - 1] += d;\n                                t += d;\n                            } else {\n                                const d = this.visemeDurations[viseme] || 1;\n                                o.visemes.push(viseme);\n                                o.times.push(t);\n                                o.durations.push(d);\n                                t += d;\n                            }\n                        });\n                        o.i += rule.move;\n                        break;\n                    }\n                }\n            } else {\n                o.i++;\n                t += this.specialDurations[c] || 0;\n            }\n        }\n        return o;\n    }\n    constructor(){\n        this.rules = {\n            A: [\n                \"[A] =aa\",\n                \" [ARE] =aa RR\",\n                \" [AR]O=aa RR\",\n                \"[AR]#=E RR\",\n                \" ^[AS]#=E SS\",\n                \"[A]WA=aa\",\n                \"[AW]=aa\",\n                \" :[ANY]=E nn I\",\n                \"[A]^+#=E\",\n                \"#:[ALLY]=aa nn I\",\n                \" [AL]#=aa nn\",\n                \"[AGAIN]=aa kk E nn\",\n                \"#:[AG]E=I kk\",\n                \"[A]^+:#=aa\",\n                \":[A]^+ =E\",\n                \"[A]^%=E\",\n                \" [ARR]=aa RR\",\n                \"[ARR]=aa RR\",\n                \" :[AR] =aa RR\",\n                \"[AR] =E\",\n                \"[AR]=aa RR\",\n                \"[AIR]=E RR\",\n                \"[AI]=E\",\n                \"[AY]=E\",\n                \"[AU]=aa\",\n                \"#:[AL] =aa nn\",\n                \"#:[ALS] =aa nn SS\",\n                \"[ALK]=aa kk\",\n                \"[AL]^=aa nn\",\n                \" :[ABLE]=E PP aa nn\",\n                \"[ABLE]=aa PP aa nn\",\n                \"[ANG]+=E nn kk\",\n                \"[A]=aa\"\n            ],\n            B: [\n                \" [BE]^#=PP I\",\n                \"[BEING]=PP I I nn\",\n                \" [BOTH] =PP O TH\",\n                \" [BUS]#=PP I SS\",\n                \"[BUIL]=PP I nn\",\n                \"[B]=PP\"\n            ],\n            C: [\n                \" [CH]^=kk\",\n                \"^E[CH]=kk\",\n                \"[CH]=CH\",\n                \" S[CI]#=SS aa\",\n                \"[CI]A=SS\",\n                \"[CI]O=SS\",\n                \"[CI]EN=SS\",\n                \"[C]+=SS\",\n                \"[CK]=kk\",\n                \"[COM]%=kk aa PP\",\n                \"[C]=kk\"\n            ],\n            D: [\n                \"#:[DED] =DD I DD\",\n                \".E[D] =DD\",\n                \"#^:E[D] =DD\",\n                \" [DE]^#=DD I\",\n                \" [DO] =DD U\",\n                \" [DOES]=DD aa SS\",\n                \" [DOING]=DD U I nn\",\n                \" [DOW]=DD aa\",\n                \"[DU]A=kk U\",\n                \"[D]=DD\"\n            ],\n            E: [\n                \"#:[E] =\",\n                \"'^:[E] =\",\n                \" :[E] =I\",\n                \"#[ED] =DD\",\n                \"#:[E]D =\",\n                \"[EV]ER=E FF\",\n                \"[E]^%=I\",\n                \"[ERI]#=I RR I\",\n                \"[ERI]=E RR I\",\n                \"#:[ER]#=E\",\n                \"[ER]#=E RR\",\n                \"[ER]=E\",\n                \" [EVEN]=I FF E nn\",\n                \"#:[E]W=\",\n                \"@[EW]=U\",\n                \"[EW]=I U\",\n                \"[E]O=I\",\n                \"#:&[ES] =I SS\",\n                \"#:[E]S =\",\n                \"#:[ELY] =nn I\",\n                \"#:[EMENT]=PP E nn DD\",\n                \"[EFUL]=FF U nn\",\n                \"[EE]=I\",\n                \"[EARN]=E nn\",\n                \" [EAR]^=E\",\n                \"[EAD]=E DD\",\n                \"#:[EA] =I aa\",\n                \"[EA]SU=E\",\n                \"[EA]=I\",\n                \"[EIGH]=E\",\n                \"[EI]=I\",\n                \" [EYE]=aa\",\n                \"[EY]=I\",\n                \"[EU]=I U\",\n                \"[E]=E\"\n            ],\n            F: [\n                \"[FUL]=FF U nn\",\n                \"[F]=FF\"\n            ],\n            G: [\n                \"[GIV]=kk I FF\",\n                \" [G]I^=kk\",\n                \"[GE]T=kk E\",\n                \"SU[GGES]=kk kk E SS\",\n                \"[GG]=kk\",\n                \" B#[G]=kk\",\n                \"[G]+=kk\",\n                \"[GREAT]=kk RR E DD\",\n                \"#[GH]=\",\n                \"[G]=kk\"\n            ],\n            H: [\n                \" [HAV]=I aa FF\",\n                \" [HERE]=I I RR\",\n                \" [HOUR]=aa EE\",\n                \"[HOW]=I aa\",\n                \"[H]#=I\",\n                \"[H]=\"\n            ],\n            I: [\n                \" [IN]=I nn\",\n                \" [I] =aa\",\n                \"[IN]D=aa nn\",\n                \"[IER]=I E\",\n                \"#:R[IED] =I DD\",\n                \"[IED] =aa DD\",\n                \"[IEN]=I E nn\",\n                \"[IE]T=aa E\",\n                \" :[I]%=aa\",\n                \"[I]%=I\",\n                \"[IE]=I\",\n                \"[I]^+:#=I\",\n                \"[IR]#=aa RR\",\n                \"[IZ]%=aa SS\",\n                \"[IS]%=aa SS\",\n                \"[I]D%=aa\",\n                \"+^[I]^+=I\",\n                \"[I]T%=aa\",\n                \"#^:[I]^+=I\",\n                \"[I]^+=aa\",\n                \"[IR]=E\",\n                \"[IGH]=aa\",\n                \"[ILD]=aa nn DD\",\n                \"[IGN] =aa nn\",\n                \"[IGN]^=aa nn\",\n                \"[IGN]%=aa nn\",\n                \"[IQUE]=I kk\",\n                \"[I]=I\"\n            ],\n            J: [\n                \"[J]=kk\"\n            ],\n            K: [\n                \" [K]N=\",\n                \"[K]=kk\"\n            ],\n            L: [\n                \"[LO]C#=nn O\",\n                \"L[L]=\",\n                \"#^:[L]%=aa nn\",\n                \"[LEAD]=nn I DD\",\n                \"[L]=nn\"\n            ],\n            M: [\n                \"[MOV]=PP U FF\",\n                \"[M]=PP\"\n            ],\n            N: [\n                \"E[NG]+=nn kk\",\n                \"[NG]R=nn kk\",\n                \"[NG]#=nn kk\",\n                \"[NGL]%=nn kk aa nn\",\n                \"[NG]=nn\",\n                \"[NK]=nn kk\",\n                \" [NOW] =nn aa\",\n                \"[N]=nn\"\n            ],\n            O: [\n                \"[OF] =aa FF\",\n                \"[OROUGH]=E O\",\n                \"#:[OR] =E\",\n                \"#:[ORS] =E SS\",\n                \"[OR]=aa RR\",\n                \" [ONE]=FF aa nn\",\n                \"[OW]=O\",\n                \" [OVER]=O FF E\",\n                \"[OV]=aa FF\",\n                \"[O]^%=O\",\n                \"[O]^EN=O\",\n                \"[O]^I#=O\",\n                \"[OL]D=O nn\",\n                \"[OUGHT]=aa DD\",\n                \"[OUGH]=aa FF\",\n                \" [OU]=aa\",\n                \"H[OU]S#=aa\",\n                \"[OUS]=aa SS\",\n                \"[OUR]=aa RR\",\n                \"[OULD]=U DD\",\n                \"^[OU]^L=aa\",\n                \"[OUP]=U OO\",\n                \"[OU]=aa\",\n                \"[OY]=O\",\n                \"[OING]=O I nn\",\n                \"[OI]=O\",\n                \"[OOR]=aa RR\",\n                \"[OOK]=U kk\",\n                \"[OOD]=U DD\",\n                \"[OO]=U\",\n                \"[O]E=O\",\n                \"[O] =O\",\n                \"[OA]=O\",\n                \" [ONLY]=O nn nn I\",\n                \" [ONCE]=FF aa nn SS\",\n                \"[ON'T]=O nn DD\",\n                \"C[O]N=aa\",\n                \"[O]NG=aa\",\n                \" ^:[O]N=aa\",\n                \"I[ON]=aa nn\",\n                \"#:[ON] =aa nn\",\n                \"#^[ON]=aa nn\",\n                \"[O]ST =O\",\n                \"[OF]^=aa FF\",\n                \"[OTHER]=aa TH E\",\n                \"[OSS] =aa SS\",\n                \"#^:[OM]=aa PP\",\n                \"[O]=aa\"\n            ],\n            P: [\n                \"[PH]=FF\",\n                \"[PEOP]=PP I PP\",\n                \"[POW]=PP aa\",\n                \"[PUT] =PP U DD\",\n                \"[P]=PP\"\n            ],\n            Q: [\n                \"[QUAR]=kk FF aa RR\",\n                \"[QU]=kk FF\",\n                \"[Q]=kk\"\n            ],\n            R: [\n                \" [RE]^#=RR I\",\n                \"[R]=RR\"\n            ],\n            S: [\n                \"[SH]=SS\",\n                \"#[SION]=SS aa nn\",\n                \"[SOME]=SS aa PP\",\n                \"#[SUR]#=SS E\",\n                \"[SUR]#=SS E\",\n                \"#[SU]#=SS U\",\n                \"#[SSU]#=SS U\",\n                \"#[SED] =SS DD\",\n                \"#[S]#=SS\",\n                \"[SAID]=SS E DD\",\n                \"^[SION]=SS aa nn\",\n                \"[S]S=\",\n                \".[S] =SS\",\n                \"#:.E[S] =SS\",\n                \"#^:##[S] =SS\",\n                \"#^:#[S] =SS\",\n                \"U[S] =SS\",\n                \" :#[S] =SS\",\n                \" [SCH]=SS kk\",\n                \"[S]C+=\",\n                \"#[SM]=SS PP\",\n                \"#[SN]'=SS aa nn\",\n                \"[S]=SS\"\n            ],\n            T: [\n                \" [THE] =TH aa\",\n                \"[TO] =DD U\",\n                \"[THAT] =TH aa DD\",\n                \" [THIS] =TH I SS\",\n                \" [THEY]=TH E\",\n                \" [THERE]=TH E RR\",\n                \"[THER]=TH E\",\n                \"[THEIR]=TH E RR\",\n                \" [THAN] =TH aa nn\",\n                \" [THEM] =TH E PP\",\n                \"[THESE] =TH I SS\",\n                \" [THEN]=TH E nn\",\n                \"[THROUGH]=TH RR U\",\n                \"[THOSE]=TH O SS\",\n                \"[THOUGH] =TH O\",\n                \" [THUS]=TH aa SS\",\n                \"[TH]=TH\",\n                \"#:[TED] =DD I DD\",\n                \"S[TI]#N=CH\",\n                \"[TI]O=SS\",\n                \"[TI]A=SS\",\n                \"[TIEN]=SS aa nn\",\n                \"[TUR]#=CH E\",\n                \"[TU]A=CH U\",\n                \" [TWO]=DD U\",\n                \"[T]=DD\"\n            ],\n            U: [\n                \" [UN]I=I U nn\",\n                \" [UN]=aa nn\",\n                \" [UPON]=aa PP aa nn\",\n                \"@[UR]#=U RR\",\n                \"[UR]#=I U RR\",\n                \"[UR]=E\",\n                \"[U]^ =aa\",\n                \"[U]^^=aa\",\n                \"[UY]=aa\",\n                \" G[U]#=\",\n                \"G[U]%=\",\n                \"G[U]#=FF\",\n                \"#N[U]=I U\",\n                \"@[U]=I\",\n                \"[U]=I U\"\n            ],\n            V: [\n                \"[VIEW]=FF I U\",\n                \"[V]=FF\"\n            ],\n            W: [\n                \" [WERE]=FF E\",\n                \"[WA]S=FF aa\",\n                \"[WA]T=FF aa\",\n                \"[WHERE]=FF E RR\",\n                \"[WHAT]=FF aa DD\",\n                \"[WHOL]=I O nn\",\n                \"[WHO]=I U\",\n                \"[WH]=FF\",\n                \"[WAR]=FF aa RR\",\n                \"[WOR]^=FF E\",\n                \"[WR]=RR\",\n                \"[W]=FF\"\n            ],\n            X: [\n                \" [X]=SS\",\n                \"[X]=kk SS\"\n            ],\n            Y: [\n                \"[YOUNG]=I aa nn\",\n                \" [YOU]=I U\",\n                \" [YES]=I E SS\",\n                \" [Y]=I\",\n                \"#^:[Y] =I\",\n                \"#^:[Y]I=I\",\n                \" :[Y] =aa\",\n                \" :[Y]#=aa\",\n                \" :[Y]^+:#=I\",\n                \" :[Y]^#=I\",\n                \"[Y]=I\"\n            ],\n            Z: [\n                \"[Z]=SS\"\n            ]\n        };\n        const ops = {\n            \"#\": \"[AEIOUY]+\",\n            // This one is not used: \"'\": '[BCDFGHJKLMNPQRSTVWXZ]+', // One or more consonants BCDFGHJKLMNPQRSTVWXZ\n            \".\": \"[BDVGJLMNRWZ]\",\n            // This one is not used: '$': '[BDVGJLMNRWZ][EI]', // One consonant followed by E or I\n            \"%\": \"(?:ER|E|ES|ED|ING|ELY)\",\n            \"&\": \"(?:[SCGZXJ]|CH|SH)\",\n            \"@\": \"(?:[TSRDLZNJ]|TH|CH|SH)\",\n            \"^\": \"[BCDFGHJKLMNPQRSTVWXZ]\",\n            \"+\": \"[EIY]\",\n            \":\": \"[BCDFGHJKLMNPQRSTVWXZ]*\",\n            \" \": \"\\\\b\"\n        };\n        // Convert rules to regex\n        Object.keys(this.rules).forEach((key)=>{\n            this.rules[key] = this.rules[key].map((rule)=>{\n                const posL = rule.indexOf(\"[\");\n                const posR = rule.indexOf(\"]\");\n                const posE = rule.indexOf(\"=\");\n                const strLeft = rule.substring(0, posL);\n                const strLetters = rule.substring(posL + 1, posR);\n                const strRight = rule.substring(posR + 1, posE);\n                const strVisemes = rule.substring(posE + 1);\n                const o = {\n                    regex: \"\",\n                    move: 0,\n                    visemes: []\n                };\n                let exp = \"\";\n                exp += [\n                    ...strLeft\n                ].map((x)=>ops[x] || x).join(\"\");\n                const ctxLetters = [\n                    ...strLetters\n                ];\n                ctxLetters[0] = ctxLetters[0].toLowerCase();\n                exp += ctxLetters.join(\"\");\n                o.move = ctxLetters.length;\n                exp += [\n                    ...strRight\n                ].map((x)=>ops[x] || x).join(\"\");\n                o.regex = new RegExp(exp);\n                if (strVisemes.length) {\n                    strVisemes.split(\" \").forEach((viseme)=>{\n                        o.visemes.push(viseme);\n                    });\n                }\n                return o;\n            });\n        });\n        // Viseme durations in relative unit (1=average)\n        // TODO: Check for statistics for English\n        this.visemeDurations = {\n            aa: 0.95,\n            E: 0.9,\n            I: 0.92,\n            O: 0.96,\n            U: 0.95,\n            PP: 1.08,\n            SS: 1.23,\n            TH: 1,\n            DD: 1.05,\n            FF: 1.0,\n            kk: 1.21,\n            nn: 0.88,\n            RR: 0.88,\n            sil: 1\n        };\n        // Pauses in relative units (1=average)\n        this.specialDurations = {\n            \" \": 1,\n            \",\": 3,\n            \"-\": 0.5,\n            \"'\": 0.5\n        };\n        // English number words\n        this.digits = [\n            \"oh\",\n            \"one\",\n            \"two\",\n            \"three\",\n            \"four\",\n            \"five\",\n            \"six\",\n            \"seven\",\n            \"eight\",\n            \"nine\"\n        ];\n        this.ones = [\n            \"\",\n            \"one\",\n            \"two\",\n            \"three\",\n            \"four\",\n            \"five\",\n            \"six\",\n            \"seven\",\n            \"eight\",\n            \"nine\"\n        ];\n        this.tens = [\n            \"\",\n            \"\",\n            \"twenty\",\n            \"thirty\",\n            \"forty\",\n            \"fifty\",\n            \"sixty\",\n            \"seventy\",\n            \"eighty\",\n            \"ninety\"\n        ];\n        this.teens = [\n            \"ten\",\n            \"eleven\",\n            \"twelve\",\n            \"thirteen\",\n            \"fourteen\",\n            \"fifteen\",\n            \"sixteen\",\n            \"seventeen\",\n            \"eighteen\",\n            \"nineteen\"\n        ];\n        // Symbols to English\n        this.symbols = {\n            \"%\": \"percent\",\n            \"€\": \"euros\",\n            \"&\": \"and\",\n            \"+\": \"plus\",\n            $: \"dollars\"\n        };\n        this.symbolsReg = /[%€&\\+\\$]/g;\n        // IPA to Oculus viseme mapping\n        this.espeakToOculusViseme = {\n            // Vowels\n            iː: \"I\",\n            ɪ: \"I\",\n            e: \"E\",\n            æ: \"aa\",\n            aː: \"aa\",\n            ɒ: \"O\",\n            ɔː: \"O\",\n            ʊ: \"U\",\n            uː: \"U\",\n            ʌ: \"aa\",\n            ə: \"E\",\n            // Diphthongs\n            eɪ: \"E\",\n            aɪ: \"I\",\n            ɔɪ: \"O\",\n            aʊ: \"O\",\n            oʊ: \"O\",\n            ɪə: \"I\",\n            eə: \"E\",\n            ʊə: \"U\",\n            // Consonants\n            p: \"PP\",\n            b: \"PP\",\n            t: \"DD\",\n            d: \"DD\",\n            k: \"kk\",\n            g: \"kk\",\n            tʃ: \"CH\",\n            dʒ: \"CH\",\n            f: \"FF\",\n            v: \"FF\",\n            θ: \"TH\",\n            ð: \"TH\",\n            s: \"SS\",\n            z: \"SS\",\n            ʃ: \"SS\",\n            ʒ: \"SS\",\n            h: \"sil\",\n            m: \"PP\",\n            n: \"nn\",\n            ŋ: \"nn\",\n            l: \"DD\",\n            r: \"RR\",\n            ɹ: \"RR\",\n            ɾ: \"RR\",\n            w: \"U\",\n            j: \"I\",\n            // Additional phonemes for other languages\n            ɑ: \"aa\",\n            ɑː: \"aa\",\n            ɐ: \"aa\",\n            ɜ: \"E\",\n            ø: \"E\",\n            y: \"I\",\n            eː: \"E\",\n            œ: \"E\",\n            ɶ: \"aa\",\n            ɒ̃: \"O\",\n            ã: \"aa\",\n            õ: \"O\",\n            ɲ: \"nn\",\n            ʎ: \"nn\",\n            ʍ: \"U\",\n            ç: \"SS\",\n            x: \"kk\",\n            ɣ: \"kk\",\n            β: \"FF\",\n            ʔ: \"sil\",\n            ʕ: \"sil\",\n            ɬ: \"SS\",\n            ɮ: \"SS\",\n            ʢ: \"sil\",\n            ʡ: \"sil\",\n            ɖ: \"DD\",\n            ɗ: \"DD\",\n            ʄ: \"DD\",\n            ɟ: \"DD\",\n            ɠ: \"kk\",\n            ʛ: \"kk\"\n        };\n        // Punctuation to be preserved\n        this.punctuation = {\n            \";\": 1,\n            \":\": 1,\n            \",\": 1,\n            \".\": 1,\n            \"!\": 1,\n            \"?\": 1,\n            \"¡\": 1,\n            \"¿\": 1,\n            \"—\": 1,\n            '\"': 1,\n            \"…\": 1,\n            \"«\": 1,\n            \"»\": 1,\n            \"(\": 1,\n            \")\": 1,\n            \"{\": 1,\n            \"}\": 1,\n            \"[\": 1,\n            \"]\": 1\n        };\n    }\n}\nclass LipsyncTa {\n    convertNumberToWords(num) {\n        num = parseInt(num);\n        if (num == 0) {\n            return this.digits[0];\n        }\n        let words = \"\";\n        // Handle crores (10 million)\n        if (num >= 10000000) {\n            words += this.convertNumberToWords(Math.floor(num / 10000000)) + \" \" + this.crores + \" \";\n            num %= 10000000;\n        }\n        // Handle lakhs (100,000)\n        if (num >= 100000) {\n            words += this.convertNumberToWords(Math.floor(num / 100000)) + \" \" + this.lakhs + \" \";\n            num %= 100000;\n        }\n        // Handle thousands\n        if (num >= 1000) {\n            words += this.convertNumberToWords(Math.floor(num / 1000)) + \" \" + this.thousands + \" \";\n            num %= 1000;\n        }\n        // Handle hundreds\n        if (num >= 100) {\n            words += this.hundreds[Math.floor(num / 100)] + \" \";\n            num %= 100;\n        }\n        // Handle tens\n        if (num >= 10 && num <= 19) {\n            // Special case for 11-19 in Tamil\n            words += this.digits[num % 10] + \"பதின்\" + \" \";\n        } else if (num >= 20) {\n            words += this.tens[Math.floor(num / 10)] + \" \";\n            num %= 10;\n        }\n        // Handle ones\n        if (num > 0) {\n            words += this.digits[num] + \" \";\n        }\n        return words.trim();\n    }\n    /**\r\n   * Preprocess text:\r\n   * - convert symbols to words\r\n   * - convert numbers to words\r\n   * - filter out characters that should be left unspoken\r\n   * @param {string} s Text\r\n   * @return {string} Pre-processsed text.\r\n   */ preProcessText(s) {\n        return s.replace(/[#_*\":;]/g, \"\").replace(this.symbolsReg, (symbol)=>{\n            return \" \" + this.symbols[symbol] + \" \";\n        }).replace(/(\\d)\\.(\\d)/g, \"$1 point $2\") // Number separator (point)\n        .replace(/\\d+/g, this.convertNumberToWords.bind(this)) // Numbers to words\n        .replace(/(\\D)\\1\\1+/g, \"$1$1\") // max 2 repeating chars\n        .replaceAll(\"  \", \" \") // Only one repeating space\n        .trim();\n    }\n    /**\r\n   * Convert word to Oculus LipSync Visemes and durations\r\n   * @param {string} w Text\r\n   * @return {Object} Oculus LipSync Visemes and durations.\r\n   */ wordsToVisemes(w) {\n        let o = {\n            words: w,\n            visemes: [],\n            times: [],\n            durations: [],\n            i: 0\n        };\n        let t = 0;\n        const chars = [\n            ...o.words\n        ];\n        while(o.i < chars.length){\n            const c = chars[o.i];\n            const ruleset = this.rules[c];\n            if (ruleset) {\n                for(let i = 0; i < ruleset.length; i++){\n                    const rule = ruleset[i];\n                    const test = o.words.substring(0, o.i) + c + o.words.substring(o.i + 1);\n                    let matches = test.match(rule.regex);\n                    if (matches) {\n                        rule.visemes.forEach((viseme)=>{\n                            if (o.visemes.length && o.visemes[o.visemes.length - 1] === viseme) {\n                                const d = 0.7 * (this.visemeDurations[viseme] || 1);\n                                o.durations[o.durations.length - 1] += d;\n                                t += d;\n                            } else {\n                                const d = this.visemeDurations[viseme] || 1;\n                                o.visemes.push(viseme);\n                                o.times.push(t);\n                                o.durations.push(d);\n                                t += d;\n                            }\n                        });\n                        o.i += rule.move;\n                        break;\n                    }\n                }\n            } else {\n                o.i++;\n                t += this.specialDurations[c] || 0;\n            }\n        }\n        return o;\n    }\n    /**\r\n   * Process text to generate visemes\r\n   * @param {string} text Input Tamil text\r\n   * @return {Object} Processed visemes and timing data\r\n   */ processText(text) {\n        const preprocessed = this.preProcessText(text);\n        const words = preprocessed.split(\" \");\n        let result = {\n            originalText: text,\n            preprocessedText: preprocessed,\n            words: [],\n            visemes: [],\n            times: [],\n            durations: []\n        };\n        let totalTime = 0;\n        // Process each word\n        for(let i = 0; i < words.length; i++){\n            if (words[i].trim() === \"\") continue;\n            const wordResult = this.wordsToVisemes(words[i]);\n            // Add the word data\n            result.words.push({\n                text: words[i],\n                startTime: totalTime,\n                visemes: wordResult.visemes,\n                times: wordResult.times.map((t)=>t + totalTime),\n                durations: wordResult.durations\n            });\n            // Add word's visemes to the global result\n            for(let j = 0; j < wordResult.visemes.length; j++){\n                result.visemes.push(wordResult.visemes[j]);\n                result.times.push(wordResult.times[j] + totalTime);\n                result.durations.push(wordResult.durations[j]);\n            }\n            // Calculate word duration\n            const wordDuration = wordResult.times.length > 0 ? wordResult.times[wordResult.times.length - 1] + wordResult.durations[wordResult.durations.length - 1] : 0;\n            totalTime += wordDuration + this.specialDurations[\" \"]; // Add word spacing\n        }\n        return result;\n    }\n    constructor(){\n        this.rules = {\n            அ: [\n                {\n                    regex: /அ/,\n                    move: 1,\n                    visemes: [\n                        \"aa\"\n                    ]\n                }\n            ],\n            ஆ: [\n                {\n                    regex: /ஆ/,\n                    move: 1,\n                    visemes: [\n                        \"aa\"\n                    ]\n                }\n            ],\n            இ: [\n                {\n                    regex: /இ/,\n                    move: 1,\n                    visemes: [\n                        \"I\"\n                    ]\n                }\n            ],\n            ஈ: [\n                {\n                    regex: /ஈ/,\n                    move: 1,\n                    visemes: [\n                        \"I\"\n                    ]\n                }\n            ],\n            உ: [\n                {\n                    regex: /உ/,\n                    move: 1,\n                    visemes: [\n                        \"U\"\n                    ]\n                }\n            ],\n            ஊ: [\n                {\n                    regex: /ஊ/,\n                    move: 1,\n                    visemes: [\n                        \"U\"\n                    ]\n                }\n            ],\n            எ: [\n                {\n                    regex: /எ/,\n                    move: 1,\n                    visemes: [\n                        \"E\"\n                    ]\n                }\n            ],\n            ஏ: [\n                {\n                    regex: /ஏ/,\n                    move: 1,\n                    visemes: [\n                        \"E\"\n                    ]\n                }\n            ],\n            ஐ: [\n                {\n                    regex: /ஐ/,\n                    move: 1,\n                    visemes: [\n                        \"aa\",\n                        \"I\"\n                    ]\n                }\n            ],\n            ஒ: [\n                {\n                    regex: /ஒ/,\n                    move: 1,\n                    visemes: [\n                        \"O\"\n                    ]\n                }\n            ],\n            ஓ: [\n                {\n                    regex: /ஓ/,\n                    move: 1,\n                    visemes: [\n                        \"O\"\n                    ]\n                }\n            ],\n            ஔ: [\n                {\n                    regex: /ஔ/,\n                    move: 1,\n                    visemes: [\n                        \"aa\",\n                        \"U\"\n                    ]\n                }\n            ],\n            க்: [\n                {\n                    regex: /க்/,\n                    move: 1,\n                    visemes: [\n                        \"kk\"\n                    ]\n                }\n            ],\n            ங்: [\n                {\n                    regex: /ங்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\",\n                        \"kk\"\n                    ]\n                }\n            ],\n            ச்: [\n                {\n                    regex: /ச்/,\n                    move: 1,\n                    visemes: [\n                        \"CH\"\n                    ]\n                }\n            ],\n            ஞ்: [\n                {\n                    regex: /ஞ்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\",\n                        \"CH\"\n                    ]\n                }\n            ],\n            ட்: [\n                {\n                    regex: /ட்/,\n                    move: 1,\n                    visemes: [\n                        \"DD\"\n                    ]\n                }\n            ],\n            ண்: [\n                {\n                    regex: /ண்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            த்: [\n                {\n                    regex: /த்/,\n                    move: 1,\n                    visemes: [\n                        \"TH\"\n                    ]\n                }\n            ],\n            ந்: [\n                {\n                    regex: /ந்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            ப்: [\n                {\n                    regex: /ப்/,\n                    move: 1,\n                    visemes: [\n                        \"PP\"\n                    ]\n                }\n            ],\n            ம்: [\n                {\n                    regex: /ம்/,\n                    move: 1,\n                    visemes: [\n                        \"PP\"\n                    ]\n                }\n            ],\n            ய்: [\n                {\n                    regex: /ய்/,\n                    move: 1,\n                    visemes: [\n                        \"I\"\n                    ]\n                }\n            ],\n            ர்: [\n                {\n                    regex: /ர்/,\n                    move: 1,\n                    visemes: [\n                        \"RR\"\n                    ]\n                }\n            ],\n            ல்: [\n                {\n                    regex: /ல்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            வ்: [\n                {\n                    regex: /வ்/,\n                    move: 1,\n                    visemes: [\n                        \"FF\"\n                    ]\n                }\n            ],\n            ழ்: [\n                {\n                    regex: /ழ்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            ள்: [\n                {\n                    regex: /ள்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            ற்: [\n                {\n                    regex: /ற்/,\n                    move: 1,\n                    visemes: [\n                        \"RR\"\n                    ]\n                }\n            ],\n            ன்: [\n                {\n                    regex: /ன்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            ஜ்: [\n                {\n                    regex: /ஜ்/,\n                    move: 1,\n                    visemes: [\n                        \"SS\"\n                    ]\n                }\n            ],\n            ஷ்: [\n                {\n                    regex: /ஷ்/,\n                    move: 1,\n                    visemes: [\n                        \"SS\"\n                    ]\n                }\n            ],\n            ஸ்: [\n                {\n                    regex: /ஸ்/,\n                    move: 1,\n                    visemes: [\n                        \"SS\"\n                    ]\n                }\n            ],\n            ஹ்: [\n                {\n                    regex: /ஹ்/,\n                    move: 1,\n                    visemes: [\n                        \"kk\"\n                    ]\n                }\n            ],\n            க: [\n                {\n                    regex: /க/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            கா: [\n                {\n                    regex: /கா/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            கி: [\n                {\n                    regex: /கி/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"I\"\n                    ]\n                }\n            ],\n            கீ: [\n                {\n                    regex: /கீ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"I\"\n                    ]\n                }\n            ],\n            கு: [\n                {\n                    regex: /கு/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"U\"\n                    ]\n                }\n            ],\n            கூ: [\n                {\n                    regex: /கூ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"U\"\n                    ]\n                }\n            ],\n            கெ: [\n                {\n                    regex: /கெ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"E\"\n                    ]\n                }\n            ],\n            கே: [\n                {\n                    regex: /கே/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"E\"\n                    ]\n                }\n            ],\n            கை: [\n                {\n                    regex: /கை/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"aa\",\n                        \"I\"\n                    ]\n                }\n            ],\n            கொ: [\n                {\n                    regex: /கொ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"O\"\n                    ]\n                }\n            ],\n            கோ: [\n                {\n                    regex: /கோ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"O\"\n                    ]\n                }\n            ],\n            கௌ: [\n                {\n                    regex: /கௌ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"aa\",\n                        \"U\"\n                    ]\n                }\n            ],\n            ப: [\n                {\n                    regex: /ப/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            பா: [\n                {\n                    regex: /பா/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            பி: [\n                {\n                    regex: /பி/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"I\"\n                    ]\n                }\n            ],\n            பீ: [\n                {\n                    regex: /பீ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"I\"\n                    ]\n                }\n            ],\n            பு: [\n                {\n                    regex: /பு/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"U\"\n                    ]\n                }\n            ],\n            பூ: [\n                {\n                    regex: /பூ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"U\"\n                    ]\n                }\n            ],\n            பெ: [\n                {\n                    regex: /பெ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"E\"\n                    ]\n                }\n            ],\n            பே: [\n                {\n                    regex: /பே/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"E\"\n                    ]\n                }\n            ],\n            பை: [\n                {\n                    regex: /பை/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"aa\",\n                        \"I\"\n                    ]\n                }\n            ],\n            பொ: [\n                {\n                    regex: /பொ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"O\"\n                    ]\n                }\n            ],\n            போ: [\n                {\n                    regex: /போ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"O\"\n                    ]\n                }\n            ],\n            பௌ: [\n                {\n                    regex: /பௌ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"aa\",\n                        \"U\"\n                    ]\n                }\n            ],\n            த: [\n                {\n                    regex: /த/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            தா: [\n                {\n                    regex: /தா/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            தி: [\n                {\n                    regex: /தி/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"I\"\n                    ]\n                }\n            ],\n            தீ: [\n                {\n                    regex: /தீ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"I\"\n                    ]\n                }\n            ],\n            து: [\n                {\n                    regex: /து/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"U\"\n                    ]\n                }\n            ],\n            தூ: [\n                {\n                    regex: /தூ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"U\"\n                    ]\n                }\n            ],\n            தெ: [\n                {\n                    regex: /தெ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"E\"\n                    ]\n                }\n            ],\n            தே: [\n                {\n                    regex: /தே/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"E\"\n                    ]\n                }\n            ],\n            தை: [\n                {\n                    regex: /தை/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"aa\",\n                        \"I\"\n                    ]\n                }\n            ],\n            தொ: [\n                {\n                    regex: /தொ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"O\"\n                    ]\n                }\n            ],\n            தோ: [\n                {\n                    regex: /தோ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"O\"\n                    ]\n                }\n            ],\n            தௌ: [\n                {\n                    regex: /தௌ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"aa\",\n                        \"U\"\n                    ]\n                }\n            ]\n        };\n        this.visemeDurations = {\n            aa: 1.0,\n            E: 0.9,\n            I: 0.85,\n            O: 0.95,\n            U: 0.9,\n            PP: 1.1,\n            SS: 1.2,\n            TH: 1.05,\n            DD: 1.1,\n            FF: 1.0,\n            kk: 1.2,\n            nn: 0.9,\n            RR: 0.8,\n            CH: 1.1,\n            sil: 1\n        };\n        this.specialDurations = {\n            \" \": 1,\n            \",\": 3,\n            \"-\": 0.5,\n            \"'\": 0.5,\n            \".\": 4,\n            \"?\": 3.5,\n            \"!\": 3.5\n        };\n        // Tamil number words\n        this.digits = [\n            \"பூஜ்யம்\",\n            \"ஒன்று\",\n            \"இரண்டு\",\n            \"மூன்று\",\n            \"நான்கு\",\n            \"ஐந்து\",\n            \"ஆறு\",\n            \"ஏழு\",\n            \"எட்டு\",\n            \"ஒன்பது\"\n        ];\n        this.tens = [\n            \"\",\n            \"பத்து\",\n            \"இருபது\",\n            \"முப்பது\",\n            \"நாற்பது\",\n            \"ஐம்பது\",\n            \"அறுபது\",\n            \"எழுபது\",\n            \"எண்பது\",\n            \"தொண்ணூறு\"\n        ];\n        this.hundreds = [\n            \"\",\n            \"நூறு\",\n            \"இருநூறு\",\n            \"முந்நூறு\",\n            \"நானூறு\",\n            \"ஐநூறு\",\n            \"அறுநூறு\",\n            \"எழுநூறு\",\n            \"எண்ணூறு\",\n            \"தொள்ளாயிரம்\"\n        ];\n        this.thousands = \"ஆயிரம்\";\n        this.lakhs = \"லட்சம்\";\n        this.crores = \"கோடி\";\n        // Symbols to Tamil\n        this.symbols = {\n            \"%\": \"சதவீதம்\",\n            \"€\": \"யூரோ\",\n            \"&\": \"மற்றும்\",\n            \"+\": \"கூட்டல்\",\n            $: \"டாலர்\",\n            \"₹\": \"ரூபாய்\"\n        };\n        this.symbolsReg = /[%€&\\+\\$₹]/g;\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/services/LipSyncProvider.tsx\n"));

/***/ })

});