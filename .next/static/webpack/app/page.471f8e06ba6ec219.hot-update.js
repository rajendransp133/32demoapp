"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/services/LipSyncProvider.tsx":
/*!**********************************************!*\
  !*** ./src/app/services/LipSyncProvider.tsx ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LipsyncEn: () => (/* binding */ LipsyncEn),\n/* harmony export */   LipsyncTa: () => (/* binding */ LipsyncTa)\n/* harmony export */ });\nclass LipsyncEn {\n    convert_digit_by_digit(num) {\n        const numArray = num.split(\"\");\n        let numWords = \"\";\n        for(let m = 0; m < numArray.length; m++){\n            numWords += this.digits[numArray[m]] + \" \";\n        }\n        numWords = numWords.substring(0, numWords.length - 1); //kill final space\n        return numWords;\n    }\n    convert_sets_of_two(num) {\n        let firstNumHalf = String(num).substring(0, 2);\n        let secondNumHalf = String(num).substring(2, 4);\n        let numWords = this.convert_tens(firstNumHalf);\n        numWords += \" \" + this.convert_tens(secondNumHalf);\n        return numWords;\n    }\n    convert_millions(num) {\n        if (Number(num) >= 1000000) {\n            return this.convert_millions(Math.floor(Number(num) / 1000000).toString()) + \" million \" + this.convert_thousands((Number(num) % 1000000).toString());\n        } else {\n            return this.convert_thousands(num);\n        }\n    }\n    convert_thousands(num) {\n        if (Number(num) >= 1000) {\n            return this.convert_hundreds(Math.floor(Number(num) / 1000).toString()) + \" thousand \" + this.convert_hundreds((Number(num) % 1000).toString());\n        } else {\n            return this.convert_hundreds(num);\n        }\n    }\n    convert_hundreds(num) {\n        if (Number(num) > 99) {\n            return this.ones[Math.floor(Number(num) / 100)] + \" hundred \" + this.convert_tens((Number(num) % 100).toString());\n        } else {\n            return this.convert_tens(num);\n        }\n    }\n    convert_tens(num) {\n        if (Number(num) < 10) {\n            return (Number(num) != 0 && num.toString().startsWith(\"0\") ? \"oh \" : \"\") + this.ones[Number(num)];\n        } else if (Number(num) >= 10 && Number(num) < 20) {\n            return this.teens[Number(num) - 10];\n        } else {\n            return this.tens[Math.floor(Number(num) / 10)] + \" \" + this.ones[Number(num) % 10];\n        }\n    }\n    convertNumberToWords(num) {\n        if (num == \"0\") {\n            return \"zero\";\n        } else if (num.startsWith(\"0\")) {\n            return this.convert_digit_by_digit(num);\n        } else if (Number(num) < 1000 && Number(num) > 99 || Number(num) > 10000 && Number(num) < 1000000) {\n            //read area and zip codes digit by digit\n            return this.convert_digit_by_digit(num);\n        } else if (Number(num) > 1000 && Number(num) < 2000 || Number(num) > 2009 && Number(num) < 3000) {\n            //read years as two sets of two digits\n            return Number(num) % 100 != 0 ? this.convert_sets_of_two(num) : this.convert_tens(num.substring(0, 2)) + \" hundred\";\n        } else {\n            return this.convert_millions(num);\n        }\n    }\n    preProcessText(s) {\n        return s.replace(/[#_*\":;]/g, \"\").replace(this.symbolsReg, (symbol)=>{\n            return \" \" + this.symbols[symbol] + \" \";\n        }).replace(/(\\d)\\.(\\d)/g, \"$1 point $2\") // Number separator\n        .replace(/\\d+/g, this.convertNumberToWords.bind(this)) // Numbers to words\n        .replace(/(\\D)\\1\\1+/g, \"$1$1\") // max 2 repeating chars\n        .replaceAll(\"  \", \" \") // Only one repeating space\n        .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").normalize(\"NFC\") // Remove non-English diacritics\n        .trim();\n    }\n    wordsToVisemes(w) {\n        let o = {\n            words: w.toUpperCase(),\n            visemes: [],\n            times: [],\n            durations: [],\n            i: 0\n        };\n        let t = 0;\n        const chars = [\n            ...o.words\n        ];\n        while(o.i < chars.length){\n            const c = chars[o.i];\n            const ruleset = this.rules[c];\n            if (ruleset) {\n                for(let i = 0; i < ruleset.length; i++){\n                    const rule = ruleset[i];\n                    const test = o.words.substring(0, o.i) + c.toLowerCase() + o.words.substring(o.i + 1);\n                    let matches = test.match(rule.regex);\n                    if (matches) {\n                        rule.visemes.forEach((viseme)=>{\n                            if (o.visemes.length && o.visemes[o.visemes.length - 1] === viseme) {\n                                const d = 0.7 * (this.visemeDurations[viseme] || 1);\n                                o.durations[o.durations.length - 1] += d;\n                                t += d;\n                            } else {\n                                const d = this.visemeDurations[viseme] || 1;\n                                o.visemes.push(viseme);\n                                o.times.push(t);\n                                o.durations.push(d);\n                                t += d;\n                            }\n                        });\n                        o.i += rule.move;\n                        break;\n                    }\n                }\n            } else {\n                o.i++;\n                t += this.specialDurations[c] || 0;\n            }\n        }\n        return o;\n    }\n    constructor(){\n        this.rules = {\n            A: [\n                \"[A] =aa\",\n                \" [ARE] =aa RR\",\n                \" [AR]O=aa RR\",\n                \"[AR]#=E RR\",\n                \" ^[AS]#=E SS\",\n                \"[A]WA=aa\",\n                \"[AW]=aa\",\n                \" :[ANY]=E nn I\",\n                \"[A]^+#=E\",\n                \"#:[ALLY]=aa nn I\",\n                \" [AL]#=aa nn\",\n                \"[AGAIN]=aa kk E nn\",\n                \"#:[AG]E=I kk\",\n                \"[A]^+:#=aa\",\n                \":[A]^+ =E\",\n                \"[A]^%=E\",\n                \" [ARR]=aa RR\",\n                \"[ARR]=aa RR\",\n                \" :[AR] =aa RR\",\n                \"[AR] =E\",\n                \"[AR]=aa RR\",\n                \"[AIR]=E RR\",\n                \"[AI]=E\",\n                \"[AY]=E\",\n                \"[AU]=aa\",\n                \"#:[AL] =aa nn\",\n                \"#:[ALS] =aa nn SS\",\n                \"[ALK]=aa kk\",\n                \"[AL]^=aa nn\",\n                \" :[ABLE]=E PP aa nn\",\n                \"[ABLE]=aa PP aa nn\",\n                \"[ANG]+=E nn kk\",\n                \"[A]=aa\"\n            ],\n            B: [\n                \" [BE]^#=PP I\",\n                \"[BEING]=PP I I nn\",\n                \" [BOTH] =PP O TH\",\n                \" [BUS]#=PP I SS\",\n                \"[BUIL]=PP I nn\",\n                \"[B]=PP\"\n            ],\n            C: [\n                \" [CH]^=kk\",\n                \"^E[CH]=kk\",\n                \"[CH]=CH\",\n                \" S[CI]#=SS aa\",\n                \"[CI]A=SS\",\n                \"[CI]O=SS\",\n                \"[CI]EN=SS\",\n                \"[C]+=SS\",\n                \"[CK]=kk\",\n                \"[COM]%=kk aa PP\",\n                \"[C]=kk\"\n            ],\n            D: [\n                \"#:[DED] =DD I DD\",\n                \".E[D] =DD\",\n                \"#^:E[D] =DD\",\n                \" [DE]^#=DD I\",\n                \" [DO] =DD U\",\n                \" [DOES]=DD aa SS\",\n                \" [DOING]=DD U I nn\",\n                \" [DOW]=DD aa\",\n                \"[DU]A=kk U\",\n                \"[D]=DD\"\n            ],\n            E: [\n                \"#:[E] =\",\n                \"'^:[E] =\",\n                \" :[E] =I\",\n                \"#[ED] =DD\",\n                \"#:[E]D =\",\n                \"[EV]ER=E FF\",\n                \"[E]^%=I\",\n                \"[ERI]#=I RR I\",\n                \"[ERI]=E RR I\",\n                \"#:[ER]#=E\",\n                \"[ER]#=E RR\",\n                \"[ER]=E\",\n                \" [EVEN]=I FF E nn\",\n                \"#:[E]W=\",\n                \"@[EW]=U\",\n                \"[EW]=I U\",\n                \"[E]O=I\",\n                \"#:&[ES] =I SS\",\n                \"#:[E]S =\",\n                \"#:[ELY] =nn I\",\n                \"#:[EMENT]=PP E nn DD\",\n                \"[EFUL]=FF U nn\",\n                \"[EE]=I\",\n                \"[EARN]=E nn\",\n                \" [EAR]^=E\",\n                \"[EAD]=E DD\",\n                \"#:[EA] =I aa\",\n                \"[EA]SU=E\",\n                \"[EA]=I\",\n                \"[EIGH]=E\",\n                \"[EI]=I\",\n                \" [EYE]=aa\",\n                \"[EY]=I\",\n                \"[EU]=I U\",\n                \"[E]=E\"\n            ],\n            F: [\n                \"[FUL]=FF U nn\",\n                \"[F]=FF\"\n            ],\n            G: [\n                \"[GIV]=kk I FF\",\n                \" [G]I^=kk\",\n                \"[GE]T=kk E\",\n                \"SU[GGES]=kk kk E SS\",\n                \"[GG]=kk\",\n                \" B#[G]=kk\",\n                \"[G]+=kk\",\n                \"[GREAT]=kk RR E DD\",\n                \"#[GH]=\",\n                \"[G]=kk\"\n            ],\n            H: [\n                \" [HAV]=I aa FF\",\n                \" [HERE]=I I RR\",\n                \" [HOUR]=aa EE\",\n                \"[HOW]=I aa\",\n                \"[H]#=I\",\n                \"[H]=\"\n            ],\n            I: [\n                \" [IN]=I nn\",\n                \" [I] =aa\",\n                \"[IN]D=aa nn\",\n                \"[IER]=I E\",\n                \"#:R[IED] =I DD\",\n                \"[IED] =aa DD\",\n                \"[IEN]=I E nn\",\n                \"[IE]T=aa E\",\n                \" :[I]%=aa\",\n                \"[I]%=I\",\n                \"[IE]=I\",\n                \"[I]^+:#=I\",\n                \"[IR]#=aa RR\",\n                \"[IZ]%=aa SS\",\n                \"[IS]%=aa SS\",\n                \"[I]D%=aa\",\n                \"+^[I]^+=I\",\n                \"[I]T%=aa\",\n                \"#^:[I]^+=I\",\n                \"[I]^+=aa\",\n                \"[IR]=E\",\n                \"[IGH]=aa\",\n                \"[ILD]=aa nn DD\",\n                \"[IGN] =aa nn\",\n                \"[IGN]^=aa nn\",\n                \"[IGN]%=aa nn\",\n                \"[IQUE]=I kk\",\n                \"[I]=I\"\n            ],\n            J: [\n                \"[J]=kk\"\n            ],\n            K: [\n                \" [K]N=\",\n                \"[K]=kk\"\n            ],\n            L: [\n                \"[LO]C#=nn O\",\n                \"L[L]=\",\n                \"#^:[L]%=aa nn\",\n                \"[LEAD]=nn I DD\",\n                \"[L]=nn\"\n            ],\n            M: [\n                \"[MOV]=PP U FF\",\n                \"[M]=PP\"\n            ],\n            N: [\n                \"E[NG]+=nn kk\",\n                \"[NG]R=nn kk\",\n                \"[NG]#=nn kk\",\n                \"[NGL]%=nn kk aa nn\",\n                \"[NG]=nn\",\n                \"[NK]=nn kk\",\n                \" [NOW] =nn aa\",\n                \"[N]=nn\"\n            ],\n            O: [\n                \"[OF] =aa FF\",\n                \"[OROUGH]=E O\",\n                \"#:[OR] =E\",\n                \"#:[ORS] =E SS\",\n                \"[OR]=aa RR\",\n                \" [ONE]=FF aa nn\",\n                \"[OW]=O\",\n                \" [OVER]=O FF E\",\n                \"[OV]=aa FF\",\n                \"[O]^%=O\",\n                \"[O]^EN=O\",\n                \"[O]^I#=O\",\n                \"[OL]D=O nn\",\n                \"[OUGHT]=aa DD\",\n                \"[OUGH]=aa FF\",\n                \" [OU]=aa\",\n                \"H[OU]S#=aa\",\n                \"[OUS]=aa SS\",\n                \"[OUR]=aa RR\",\n                \"[OULD]=U DD\",\n                \"^[OU]^L=aa\",\n                \"[OUP]=U OO\",\n                \"[OU]=aa\",\n                \"[OY]=O\",\n                \"[OING]=O I nn\",\n                \"[OI]=O\",\n                \"[OOR]=aa RR\",\n                \"[OOK]=U kk\",\n                \"[OOD]=U DD\",\n                \"[OO]=U\",\n                \"[O]E=O\",\n                \"[O] =O\",\n                \"[OA]=O\",\n                \" [ONLY]=O nn nn I\",\n                \" [ONCE]=FF aa nn SS\",\n                \"[ON'T]=O nn DD\",\n                \"C[O]N=aa\",\n                \"[O]NG=aa\",\n                \" ^:[O]N=aa\",\n                \"I[ON]=aa nn\",\n                \"#:[ON] =aa nn\",\n                \"#^[ON]=aa nn\",\n                \"[O]ST =O\",\n                \"[OF]^=aa FF\",\n                \"[OTHER]=aa TH E\",\n                \"[OSS] =aa SS\",\n                \"#^:[OM]=aa PP\",\n                \"[O]=aa\"\n            ],\n            P: [\n                \"[PH]=FF\",\n                \"[PEOP]=PP I PP\",\n                \"[POW]=PP aa\",\n                \"[PUT] =PP U DD\",\n                \"[P]=PP\"\n            ],\n            Q: [\n                \"[QUAR]=kk FF aa RR\",\n                \"[QU]=kk FF\",\n                \"[Q]=kk\"\n            ],\n            R: [\n                \" [RE]^#=RR I\",\n                \"[R]=RR\"\n            ],\n            S: [\n                \"[SH]=SS\",\n                \"#[SION]=SS aa nn\",\n                \"[SOME]=SS aa PP\",\n                \"#[SUR]#=SS E\",\n                \"[SUR]#=SS E\",\n                \"#[SU]#=SS U\",\n                \"#[SSU]#=SS U\",\n                \"#[SED] =SS DD\",\n                \"#[S]#=SS\",\n                \"[SAID]=SS E DD\",\n                \"^[SION]=SS aa nn\",\n                \"[S]S=\",\n                \".[S] =SS\",\n                \"#:.E[S] =SS\",\n                \"#^:##[S] =SS\",\n                \"#^:#[S] =SS\",\n                \"U[S] =SS\",\n                \" :#[S] =SS\",\n                \" [SCH]=SS kk\",\n                \"[S]C+=\",\n                \"#[SM]=SS PP\",\n                \"#[SN]'=SS aa nn\",\n                \"[S]=SS\"\n            ],\n            T: [\n                \" [THE] =TH aa\",\n                \"[TO] =DD U\",\n                \"[THAT] =TH aa DD\",\n                \" [THIS] =TH I SS\",\n                \" [THEY]=TH E\",\n                \" [THERE]=TH E RR\",\n                \"[THER]=TH E\",\n                \"[THEIR]=TH E RR\",\n                \" [THAN] =TH aa nn\",\n                \" [THEM] =TH E PP\",\n                \"[THESE] =TH I SS\",\n                \" [THEN]=TH E nn\",\n                \"[THROUGH]=TH RR U\",\n                \"[THOSE]=TH O SS\",\n                \"[THOUGH] =TH O\",\n                \" [THUS]=TH aa SS\",\n                \"[TH]=TH\",\n                \"#:[TED] =DD I DD\",\n                \"S[TI]#N=CH\",\n                \"[TI]O=SS\",\n                \"[TI]A=SS\",\n                \"[TIEN]=SS aa nn\",\n                \"[TUR]#=CH E\",\n                \"[TU]A=CH U\",\n                \" [TWO]=DD U\",\n                \"[T]=DD\"\n            ],\n            U: [\n                \" [UN]I=I U nn\",\n                \" [UN]=aa nn\",\n                \" [UPON]=aa PP aa nn\",\n                \"@[UR]#=U RR\",\n                \"[UR]#=I U RR\",\n                \"[UR]=E\",\n                \"[U]^ =aa\",\n                \"[U]^^=aa\",\n                \"[UY]=aa\",\n                \" G[U]#=\",\n                \"G[U]%=\",\n                \"G[U]#=FF\",\n                \"#N[U]=I U\",\n                \"@[U]=I\",\n                \"[U]=I U\"\n            ],\n            V: [\n                \"[VIEW]=FF I U\",\n                \"[V]=FF\"\n            ],\n            W: [\n                \" [WERE]=FF E\",\n                \"[WA]S=FF aa\",\n                \"[WA]T=FF aa\",\n                \"[WHERE]=FF E RR\",\n                \"[WHAT]=FF aa DD\",\n                \"[WHOL]=I O nn\",\n                \"[WHO]=I U\",\n                \"[WH]=FF\",\n                \"[WAR]=FF aa RR\",\n                \"[WOR]^=FF E\",\n                \"[WR]=RR\",\n                \"[W]=FF\"\n            ],\n            X: [\n                \" [X]=SS\",\n                \"[X]=kk SS\"\n            ],\n            Y: [\n                \"[YOUNG]=I aa nn\",\n                \" [YOU]=I U\",\n                \" [YES]=I E SS\",\n                \" [Y]=I\",\n                \"#^:[Y] =I\",\n                \"#^:[Y]I=I\",\n                \" :[Y] =aa\",\n                \" :[Y]#=aa\",\n                \" :[Y]^+:#=I\",\n                \" :[Y]^#=I\",\n                \"[Y]=I\"\n            ],\n            Z: [\n                \"[Z]=SS\"\n            ]\n        };\n        const ops = {\n            \"#\": \"[AEIOUY]+\",\n            // This one is not used: \"'\": '[BCDFGHJKLMNPQRSTVWXZ]+', // One or more consonants BCDFGHJKLMNPQRSTVWXZ\n            \".\": \"[BDVGJLMNRWZ]\",\n            // This one is not used: '$': '[BDVGJLMNRWZ][EI]', // One consonant followed by E or I\n            \"%\": \"(?:ER|E|ES|ED|ING|ELY)\",\n            \"&\": \"(?:[SCGZXJ]|CH|SH)\",\n            \"@\": \"(?:[TSRDLZNJ]|TH|CH|SH)\",\n            \"^\": \"[BCDFGHJKLMNPQRSTVWXZ]\",\n            \"+\": \"[EIY]\",\n            \":\": \"[BCDFGHJKLMNPQRSTVWXZ]*\",\n            \" \": \"\\\\b\"\n        };\n        // Convert rules to regex\n        Object.keys(this.rules).forEach((key)=>{\n            this.rules[key] = this.rules[key].map((rule)=>{\n                const posL = rule.indexOf(\"[\");\n                const posR = rule.indexOf(\"]\");\n                const posE = rule.indexOf(\"=\");\n                const strLeft = rule.substring(0, posL);\n                const strLetters = rule.substring(posL + 1, posR);\n                const strRight = rule.substring(posR + 1, posE);\n                const strVisemes = rule.substring(posE + 1);\n                const o = {\n                    regex: \"\",\n                    move: 0,\n                    visemes: []\n                };\n                let exp = \"\";\n                exp += [\n                    ...strLeft\n                ].map((x)=>ops[x] || x).join(\"\");\n                const ctxLetters = [\n                    ...strLetters\n                ];\n                ctxLetters[0] = ctxLetters[0].toLowerCase();\n                exp += ctxLetters.join(\"\");\n                o.move = ctxLetters.length;\n                exp += [\n                    ...strRight\n                ].map((x)=>ops[x] || x).join(\"\");\n                o.regex = new RegExp(exp);\n                if (strVisemes.length) {\n                    strVisemes.split(\" \").forEach((viseme)=>{\n                        o.visemes.push(viseme);\n                    });\n                }\n                return o;\n            });\n        });\n        // Viseme durations in relative unit (1=average)\n        // TODO: Check for statistics for English\n        this.visemeDurations = {\n            aa: 0.95,\n            E: 0.9,\n            I: 0.92,\n            O: 0.96,\n            U: 0.95,\n            PP: 1.08,\n            SS: 1.23,\n            TH: 1,\n            DD: 1.05,\n            FF: 1.0,\n            kk: 1.21,\n            nn: 0.88,\n            RR: 0.88,\n            sil: 1\n        };\n        // Pauses in relative units (1=average)\n        this.specialDurations = {\n            \" \": 1,\n            \",\": 3,\n            \"-\": 0.5,\n            \"'\": 0.5\n        };\n        // English number words\n        this.digits = [\n            \"oh\",\n            \"one\",\n            \"two\",\n            \"three\",\n            \"four\",\n            \"five\",\n            \"six\",\n            \"seven\",\n            \"eight\",\n            \"nine\"\n        ];\n        this.ones = [\n            \"\",\n            \"one\",\n            \"two\",\n            \"three\",\n            \"four\",\n            \"five\",\n            \"six\",\n            \"seven\",\n            \"eight\",\n            \"nine\"\n        ];\n        this.tens = [\n            \"\",\n            \"\",\n            \"twenty\",\n            \"thirty\",\n            \"forty\",\n            \"fifty\",\n            \"sixty\",\n            \"seventy\",\n            \"eighty\",\n            \"ninety\"\n        ];\n        this.teens = [\n            \"ten\",\n            \"eleven\",\n            \"twelve\",\n            \"thirteen\",\n            \"fourteen\",\n            \"fifteen\",\n            \"sixteen\",\n            \"seventeen\",\n            \"eighteen\",\n            \"nineteen\"\n        ];\n        // Symbols to English\n        this.symbols = {\n            \"%\": \"percent\",\n            \"€\": \"euros\",\n            \"&\": \"and\",\n            \"+\": \"plus\",\n            $: \"dollars\"\n        };\n        this.symbolsReg = /[%€&\\+\\$]/g;\n        // IPA to Oculus viseme mapping\n        this.espeakToOculusViseme = {\n            // Vowels\n            iː: \"I\",\n            ɪ: \"I\",\n            e: \"E\",\n            æ: \"aa\",\n            aː: \"aa\",\n            ɒ: \"O\",\n            ɔː: \"O\",\n            ʊ: \"U\",\n            uː: \"U\",\n            ʌ: \"aa\",\n            ə: \"E\",\n            // Diphthongs\n            eɪ: \"E\",\n            aɪ: \"I\",\n            ɔɪ: \"O\",\n            aʊ: \"O\",\n            oʊ: \"O\",\n            ɪə: \"I\",\n            eə: \"E\",\n            ʊə: \"U\",\n            // Consonants\n            p: \"PP\",\n            b: \"PP\",\n            t: \"DD\",\n            d: \"DD\",\n            k: \"kk\",\n            g: \"kk\",\n            tʃ: \"CH\",\n            dʒ: \"CH\",\n            f: \"FF\",\n            v: \"FF\",\n            θ: \"TH\",\n            ð: \"TH\",\n            s: \"SS\",\n            z: \"SS\",\n            ʃ: \"SS\",\n            ʒ: \"SS\",\n            h: \"sil\",\n            m: \"PP\",\n            n: \"nn\",\n            ŋ: \"nn\",\n            l: \"DD\",\n            r: \"RR\",\n            ɹ: \"RR\",\n            ɾ: \"RR\",\n            w: \"U\",\n            j: \"I\",\n            // Additional phonemes for other languages\n            ɑ: \"aa\",\n            ɑː: \"aa\",\n            ɐ: \"aa\",\n            ɜ: \"E\",\n            ø: \"E\",\n            y: \"I\",\n            eː: \"E\",\n            œ: \"E\",\n            ɶ: \"aa\",\n            ɒ̃: \"O\",\n            ã: \"aa\",\n            õ: \"O\",\n            ɲ: \"nn\",\n            ʎ: \"nn\",\n            ʍ: \"U\",\n            ç: \"SS\",\n            x: \"kk\",\n            ɣ: \"kk\",\n            β: \"FF\",\n            ʔ: \"sil\",\n            ʕ: \"sil\",\n            ɬ: \"SS\",\n            ɮ: \"SS\",\n            ʢ: \"sil\",\n            ʡ: \"sil\",\n            ɖ: \"DD\",\n            ɗ: \"DD\",\n            ʄ: \"DD\",\n            ɟ: \"DD\",\n            ɠ: \"kk\",\n            ʛ: \"kk\"\n        };\n        // Punctuation to be preserved\n        this.punctuation = {\n            \";\": 1,\n            \":\": 1,\n            \",\": 1,\n            \".\": 1,\n            \"!\": 1,\n            \"?\": 1,\n            \"¡\": 1,\n            \"¿\": 1,\n            \"—\": 1,\n            '\"': 1,\n            \"…\": 1,\n            \"«\": 1,\n            \"»\": 1,\n            '\"': 1,\n            '\"': 1,\n            \"(\": 1,\n            \")\": 1,\n            \"{\": 1,\n            \"}\": 1,\n            \"[\": 1,\n            \"]\": 1\n        };\n    }\n}\nclass LipsyncTa {\n    convertNumberToWords(num) {\n        num = parseInt(num);\n        if (num == 0) {\n            return this.digits[0];\n        }\n        let words = \"\";\n        // Handle crores (10 million)\n        if (num >= 10000000) {\n            words += this.convertNumberToWords(Math.floor(num / 10000000)) + \" \" + this.crores + \" \";\n            num %= 10000000;\n        }\n        // Handle lakhs (100,000)\n        if (num >= 100000) {\n            words += this.convertNumberToWords(Math.floor(num / 100000)) + \" \" + this.lakhs + \" \";\n            num %= 100000;\n        }\n        // Handle thousands\n        if (num >= 1000) {\n            words += this.convertNumberToWords(Math.floor(num / 1000)) + \" \" + this.thousands + \" \";\n            num %= 1000;\n        }\n        // Handle hundreds\n        if (num >= 100) {\n            words += this.hundreds[Math.floor(num / 100)] + \" \";\n            num %= 100;\n        }\n        // Handle tens\n        if (num >= 10 && num <= 19) {\n            // Special case for 11-19 in Tamil\n            words += this.digits[num % 10] + \"பதின்\" + \" \";\n        } else if (num >= 20) {\n            words += this.tens[Math.floor(num / 10)] + \" \";\n            num %= 10;\n        }\n        // Handle ones\n        if (num > 0) {\n            words += this.digits[num] + \" \";\n        }\n        return words.trim();\n    }\n    /**\r\n   * Preprocess text:\r\n   * - convert symbols to words\r\n   * - convert numbers to words\r\n   * - filter out characters that should be left unspoken\r\n   * @param {string} s Text\r\n   * @return {string} Pre-processsed text.\r\n   */ preProcessText(s) {\n        return s.replace(/[#_*\":;]/g, \"\").replace(this.symbolsReg, (symbol)=>{\n            return \" \" + this.symbols[symbol] + \" \";\n        }).replace(/(\\d)\\.(\\d)/g, \"$1 point $2\") // Number separator (point)\n        .replace(/\\d+/g, this.convertNumberToWords.bind(this)) // Numbers to words\n        .replace(/(\\D)\\1\\1+/g, \"$1$1\") // max 2 repeating chars\n        .replaceAll(\"  \", \" \") // Only one repeating space\n        .trim();\n    }\n    /**\r\n   * Convert word to Oculus LipSync Visemes and durations\r\n   * @param {string} w Text\r\n   * @return {Object} Oculus LipSync Visemes and durations.\r\n   */ wordsToVisemes(w) {\n        let o = {\n            words: w,\n            visemes: [],\n            times: [],\n            durations: [],\n            i: 0\n        };\n        let t = 0;\n        const chars = [\n            ...o.words\n        ];\n        while(o.i < chars.length){\n            const c = chars[o.i];\n            const ruleset = this.rules[c];\n            if (ruleset) {\n                for(let i = 0; i < ruleset.length; i++){\n                    const rule = ruleset[i];\n                    const test = o.words.substring(0, o.i) + c + o.words.substring(o.i + 1);\n                    let matches = test.match(rule.regex);\n                    if (matches) {\n                        rule.visemes.forEach((viseme)=>{\n                            if (o.visemes.length && o.visemes[o.visemes.length - 1] === viseme) {\n                                const d = 0.7 * (this.visemeDurations[viseme] || 1);\n                                o.durations[o.durations.length - 1] += d;\n                                t += d;\n                            } else {\n                                const d = this.visemeDurations[viseme] || 1;\n                                o.visemes.push(viseme);\n                                o.times.push(t);\n                                o.durations.push(d);\n                                t += d;\n                            }\n                        });\n                        o.i += rule.move;\n                        break;\n                    }\n                }\n            } else {\n                o.i++;\n                t += this.specialDurations[c] || 0;\n            }\n        }\n        return o;\n    }\n    /**\r\n   * Process text to generate visemes\r\n   * @param {string} text Input Tamil text\r\n   * @return {Object} Processed visemes and timing data\r\n   */ processText(text) {\n        const preprocessed = this.preProcessText(text);\n        const words = preprocessed.split(\" \");\n        let result = {\n            originalText: text,\n            preprocessedText: preprocessed,\n            words: [],\n            visemes: [],\n            times: [],\n            durations: []\n        };\n        let totalTime = 0;\n        // Process each word\n        for(let i = 0; i < words.length; i++){\n            if (words[i].trim() === \"\") continue;\n            const wordResult = this.wordsToVisemes(words[i]);\n            // Add the word data\n            result.words.push({\n                text: words[i],\n                startTime: totalTime,\n                visemes: wordResult.visemes,\n                times: wordResult.times.map((t)=>t + totalTime),\n                durations: wordResult.durations\n            });\n            // Add word's visemes to the global result\n            for(let j = 0; j < wordResult.visemes.length; j++){\n                result.visemes.push(wordResult.visemes[j]);\n                result.times.push(wordResult.times[j] + totalTime);\n                result.durations.push(wordResult.durations[j]);\n            }\n            // Calculate word duration\n            const wordDuration = wordResult.times.length > 0 ? wordResult.times[wordResult.times.length - 1] + wordResult.durations[wordResult.durations.length - 1] : 0;\n            totalTime += wordDuration + this.specialDurations[\" \"]; // Add word spacing\n        }\n        return result;\n    }\n    constructor(){\n        this.rules = {\n            அ: [\n                {\n                    regex: /அ/,\n                    move: 1,\n                    visemes: [\n                        \"aa\"\n                    ]\n                }\n            ],\n            ஆ: [\n                {\n                    regex: /ஆ/,\n                    move: 1,\n                    visemes: [\n                        \"aa\"\n                    ]\n                }\n            ],\n            இ: [\n                {\n                    regex: /இ/,\n                    move: 1,\n                    visemes: [\n                        \"I\"\n                    ]\n                }\n            ],\n            ஈ: [\n                {\n                    regex: /ஈ/,\n                    move: 1,\n                    visemes: [\n                        \"I\"\n                    ]\n                }\n            ],\n            உ: [\n                {\n                    regex: /உ/,\n                    move: 1,\n                    visemes: [\n                        \"U\"\n                    ]\n                }\n            ],\n            ஊ: [\n                {\n                    regex: /ஊ/,\n                    move: 1,\n                    visemes: [\n                        \"U\"\n                    ]\n                }\n            ],\n            எ: [\n                {\n                    regex: /எ/,\n                    move: 1,\n                    visemes: [\n                        \"E\"\n                    ]\n                }\n            ],\n            ஏ: [\n                {\n                    regex: /ஏ/,\n                    move: 1,\n                    visemes: [\n                        \"E\"\n                    ]\n                }\n            ],\n            ஐ: [\n                {\n                    regex: /ஐ/,\n                    move: 1,\n                    visemes: [\n                        \"aa\",\n                        \"I\"\n                    ]\n                }\n            ],\n            ஒ: [\n                {\n                    regex: /ஒ/,\n                    move: 1,\n                    visemes: [\n                        \"O\"\n                    ]\n                }\n            ],\n            ஓ: [\n                {\n                    regex: /ஓ/,\n                    move: 1,\n                    visemes: [\n                        \"O\"\n                    ]\n                }\n            ],\n            ஔ: [\n                {\n                    regex: /ஔ/,\n                    move: 1,\n                    visemes: [\n                        \"aa\",\n                        \"U\"\n                    ]\n                }\n            ],\n            க்: [\n                {\n                    regex: /க்/,\n                    move: 1,\n                    visemes: [\n                        \"kk\"\n                    ]\n                }\n            ],\n            ங்: [\n                {\n                    regex: /ங்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\",\n                        \"kk\"\n                    ]\n                }\n            ],\n            ச்: [\n                {\n                    regex: /ச்/,\n                    move: 1,\n                    visemes: [\n                        \"CH\"\n                    ]\n                }\n            ],\n            ஞ்: [\n                {\n                    regex: /ஞ்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\",\n                        \"CH\"\n                    ]\n                }\n            ],\n            ட்: [\n                {\n                    regex: /ட்/,\n                    move: 1,\n                    visemes: [\n                        \"DD\"\n                    ]\n                }\n            ],\n            ண்: [\n                {\n                    regex: /ண்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            த்: [\n                {\n                    regex: /த்/,\n                    move: 1,\n                    visemes: [\n                        \"TH\"\n                    ]\n                }\n            ],\n            ந்: [\n                {\n                    regex: /ந்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            ப்: [\n                {\n                    regex: /ப்/,\n                    move: 1,\n                    visemes: [\n                        \"PP\"\n                    ]\n                }\n            ],\n            ம்: [\n                {\n                    regex: /ம்/,\n                    move: 1,\n                    visemes: [\n                        \"PP\"\n                    ]\n                }\n            ],\n            ய்: [\n                {\n                    regex: /ய்/,\n                    move: 1,\n                    visemes: [\n                        \"I\"\n                    ]\n                }\n            ],\n            ர்: [\n                {\n                    regex: /ர்/,\n                    move: 1,\n                    visemes: [\n                        \"RR\"\n                    ]\n                }\n            ],\n            ல்: [\n                {\n                    regex: /ல்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            வ்: [\n                {\n                    regex: /வ்/,\n                    move: 1,\n                    visemes: [\n                        \"FF\"\n                    ]\n                }\n            ],\n            ழ்: [\n                {\n                    regex: /ழ்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            ள்: [\n                {\n                    regex: /ள்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            ற்: [\n                {\n                    regex: /ற்/,\n                    move: 1,\n                    visemes: [\n                        \"RR\"\n                    ]\n                }\n            ],\n            ன்: [\n                {\n                    regex: /ன்/,\n                    move: 1,\n                    visemes: [\n                        \"nn\"\n                    ]\n                }\n            ],\n            ஜ்: [\n                {\n                    regex: /ஜ்/,\n                    move: 1,\n                    visemes: [\n                        \"SS\"\n                    ]\n                }\n            ],\n            ஷ்: [\n                {\n                    regex: /ஷ்/,\n                    move: 1,\n                    visemes: [\n                        \"SS\"\n                    ]\n                }\n            ],\n            ஸ்: [\n                {\n                    regex: /ஸ்/,\n                    move: 1,\n                    visemes: [\n                        \"SS\"\n                    ]\n                }\n            ],\n            ஹ்: [\n                {\n                    regex: /ஹ்/,\n                    move: 1,\n                    visemes: [\n                        \"kk\"\n                    ]\n                }\n            ],\n            க: [\n                {\n                    regex: /க/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            கா: [\n                {\n                    regex: /கா/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            கி: [\n                {\n                    regex: /கி/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"I\"\n                    ]\n                }\n            ],\n            கீ: [\n                {\n                    regex: /கீ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"I\"\n                    ]\n                }\n            ],\n            கு: [\n                {\n                    regex: /கு/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"U\"\n                    ]\n                }\n            ],\n            கூ: [\n                {\n                    regex: /கூ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"U\"\n                    ]\n                }\n            ],\n            கெ: [\n                {\n                    regex: /கெ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"E\"\n                    ]\n                }\n            ],\n            கே: [\n                {\n                    regex: /கே/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"E\"\n                    ]\n                }\n            ],\n            கை: [\n                {\n                    regex: /கை/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"aa\",\n                        \"I\"\n                    ]\n                }\n            ],\n            கொ: [\n                {\n                    regex: /கொ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"O\"\n                    ]\n                }\n            ],\n            கோ: [\n                {\n                    regex: /கோ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"O\"\n                    ]\n                }\n            ],\n            கௌ: [\n                {\n                    regex: /கௌ/,\n                    move: 1,\n                    visemes: [\n                        \"kk\",\n                        \"aa\",\n                        \"U\"\n                    ]\n                }\n            ],\n            ப: [\n                {\n                    regex: /ப/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            பா: [\n                {\n                    regex: /பா/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            பி: [\n                {\n                    regex: /பி/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"I\"\n                    ]\n                }\n            ],\n            பீ: [\n                {\n                    regex: /பீ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"I\"\n                    ]\n                }\n            ],\n            பு: [\n                {\n                    regex: /பு/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"U\"\n                    ]\n                }\n            ],\n            பூ: [\n                {\n                    regex: /பூ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"U\"\n                    ]\n                }\n            ],\n            பெ: [\n                {\n                    regex: /பெ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"E\"\n                    ]\n                }\n            ],\n            பே: [\n                {\n                    regex: /பே/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"E\"\n                    ]\n                }\n            ],\n            பை: [\n                {\n                    regex: /பை/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"aa\",\n                        \"I\"\n                    ]\n                }\n            ],\n            பொ: [\n                {\n                    regex: /பொ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"O\"\n                    ]\n                }\n            ],\n            போ: [\n                {\n                    regex: /போ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"O\"\n                    ]\n                }\n            ],\n            பௌ: [\n                {\n                    regex: /பௌ/,\n                    move: 1,\n                    visemes: [\n                        \"PP\",\n                        \"aa\",\n                        \"U\"\n                    ]\n                }\n            ],\n            த: [\n                {\n                    regex: /த/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            தா: [\n                {\n                    regex: /தா/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"aa\"\n                    ]\n                }\n            ],\n            தி: [\n                {\n                    regex: /தி/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"I\"\n                    ]\n                }\n            ],\n            தீ: [\n                {\n                    regex: /தீ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"I\"\n                    ]\n                }\n            ],\n            து: [\n                {\n                    regex: /து/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"U\"\n                    ]\n                }\n            ],\n            தூ: [\n                {\n                    regex: /தூ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"U\"\n                    ]\n                }\n            ],\n            தெ: [\n                {\n                    regex: /தெ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"E\"\n                    ]\n                }\n            ],\n            தே: [\n                {\n                    regex: /தே/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"E\"\n                    ]\n                }\n            ],\n            தை: [\n                {\n                    regex: /தை/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"aa\",\n                        \"I\"\n                    ]\n                }\n            ],\n            தொ: [\n                {\n                    regex: /தொ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"O\"\n                    ]\n                }\n            ],\n            தோ: [\n                {\n                    regex: /தோ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"O\"\n                    ]\n                }\n            ],\n            தௌ: [\n                {\n                    regex: /தௌ/,\n                    move: 1,\n                    visemes: [\n                        \"TH\",\n                        \"aa\",\n                        \"U\"\n                    ]\n                }\n            ]\n        };\n        this.visemeDurations = {\n            aa: 1.0,\n            E: 0.9,\n            I: 0.85,\n            O: 0.95,\n            U: 0.9,\n            PP: 1.1,\n            SS: 1.2,\n            TH: 1.05,\n            DD: 1.1,\n            FF: 1.0,\n            kk: 1.2,\n            nn: 0.9,\n            RR: 0.8,\n            CH: 1.1,\n            sil: 1\n        };\n        this.specialDurations = {\n            \" \": 1,\n            \",\": 3,\n            \"-\": 0.5,\n            \"'\": 0.5,\n            \".\": 4,\n            \"?\": 3.5,\n            \"!\": 3.5\n        };\n        // Tamil number words\n        this.digits = [\n            \"பூஜ்யம்\",\n            \"ஒன்று\",\n            \"இரண்டு\",\n            \"மூன்று\",\n            \"நான்கு\",\n            \"ஐந்து\",\n            \"ஆறு\",\n            \"ஏழு\",\n            \"எட்டு\",\n            \"ஒன்பது\"\n        ];\n        this.tens = [\n            \"\",\n            \"பத்து\",\n            \"இருபது\",\n            \"முப்பது\",\n            \"நாற்பது\",\n            \"ஐம்பது\",\n            \"அறுபது\",\n            \"எழுபது\",\n            \"எண்பது\",\n            \"தொண்ணூறு\"\n        ];\n        this.hundreds = [\n            \"\",\n            \"நூறு\",\n            \"இருநூறு\",\n            \"முந்நூறு\",\n            \"நானூறு\",\n            \"ஐநூறு\",\n            \"அறுநூறு\",\n            \"எழுநூறு\",\n            \"எண்ணூறு\",\n            \"தொள்ளாயிரம்\"\n        ];\n        this.thousands = \"ஆயிரம்\";\n        this.lakhs = \"லட்சம்\";\n        this.crores = \"கோடி\";\n        // Symbols to Tamil\n        this.symbols = {\n            \"%\": \"சதவீதம்\",\n            \"€\": \"யூரோ\",\n            \"&\": \"மற்றும்\",\n            \"+\": \"கூட்டல்\",\n            $: \"டாலர்\",\n            \"₹\": \"ரூபாய்\"\n        };\n        this.symbolsReg = /[%€&\\+\\$₹]/g;\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvc2VydmljZXMvTGlwU3luY1Byb3ZpZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BO0lBb21CSkMsdUJBQXVCQyxHQUFXLEVBQUU7UUFDbEMsTUFBTUMsV0FBV0QsSUFBSUUsS0FBSyxDQUFDO1FBQzNCLElBQUlDLFdBQVc7UUFDZixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUgsU0FBU0ksTUFBTSxFQUFFRCxJQUFLO1lBQ3hDRCxZQUFZLElBQUksQ0FBQ0csTUFBTSxDQUFDTCxRQUFRLENBQUNHLEVBQUUsQ0FBQyxHQUFHO1FBQ3pDO1FBQ0FELFdBQVdBLFNBQVNJLFNBQVMsQ0FBQyxHQUFHSixTQUFTRSxNQUFNLEdBQUcsSUFBSSxrQkFBa0I7UUFDekUsT0FBT0Y7SUFDVDtJQUVBSyxvQkFBb0JSLEdBQVcsRUFBRTtRQUMvQixJQUFJUyxlQUFlQyxPQUFPVixLQUFLTyxTQUFTLENBQUMsR0FBRztRQUM1QyxJQUFJSSxnQkFBZ0JELE9BQU9WLEtBQUtPLFNBQVMsQ0FBQyxHQUFHO1FBQzdDLElBQUlKLFdBQVcsSUFBSSxDQUFDUyxZQUFZLENBQUNIO1FBQ2pDTixZQUFZLE1BQU0sSUFBSSxDQUFDUyxZQUFZLENBQUNEO1FBQ3BDLE9BQU9SO0lBQ1Q7SUFFQVUsaUJBQWlCYixHQUFXLEVBQUU7UUFDNUIsSUFBSWMsT0FBT2QsUUFBUSxTQUFTO1lBQzFCLE9BQ0UsSUFBSSxDQUFDYSxnQkFBZ0IsQ0FBQ0UsS0FBS0MsS0FBSyxDQUFDRixPQUFPZCxPQUFPLFNBQVNpQixRQUFRLE1BQ2hFLGNBQ0EsSUFBSSxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDSixPQUFPZCxPQUFPLE9BQU0sRUFBR2lCLFFBQVE7UUFFM0QsT0FBTztZQUNMLE9BQU8sSUFBSSxDQUFDQyxpQkFBaUIsQ0FBQ2xCO1FBQ2hDO0lBQ0Y7SUFFQWtCLGtCQUFrQmxCLEdBQVcsRUFBRTtRQUM3QixJQUFJYyxPQUFPZCxRQUFRLE1B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QUNBO1NBQ0Q7UUFDRCxJQUFJLENBQUNELFNBQVMsR0FBRztRQUNqQixJQUFJLENBQUNELEtBQUssR0FBRztRQUNiLElBQUksQ0FBQ0QsTUFBTSxHQUFHO1FBRWQsbUJBQW1CO1FBQ25CLElBQUksQ0FBQ2xLLE9BQU8sR0FBRztZQUNiLEtBQUs7WUFDTCxLQUFLO1lBQ0wsS0FBSztZQUNMLEtBQUs7WUFDTHVGLEdBQUc7WUFDSCxLQUFLO1FBQ1A7UUFDQSxJQUFJLENBQUN6RixVQUFVLEdBQUc7SUFDcEI7QUE4TEY7QUFFZ0MiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xccmFqZW5cXERvd25sb2Fkc1xcMzJtaW5zLURlbW9cXHNyY1xcYXBwXFxzZXJ2aWNlc1xcTGlwU3luY1Byb3ZpZGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBMaXBzeW5jRW4ge1xyXG4gIHJ1bGVzOiBhbnk7XHJcbiAgdmlzZW1lRHVyYXRpb25zOiBhbnk7XHJcbiAgc3BlY2lhbER1cmF0aW9uczogYW55O1xyXG4gIGRpZ2l0czogc3RyaW5nW107XHJcbiAgb25lczogc3RyaW5nW107XHJcbiAgdGVuczogc3RyaW5nW107XHJcbiAgdGVlbnM6IHN0cmluZ1tdO1xyXG4gIHN5bWJvbHM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XHJcbiAgc3ltYm9sc1JlZzogUmVnRXhwO1xyXG4gIGVzcGVha1RvT2N1bHVzVmlzZW1lOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+O1xyXG4gIHB1bmN0dWF0aW9uOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMucnVsZXMgPSB7XHJcbiAgICAgIEE6IFtcclxuICAgICAgICBcIltBXSA9YWFcIixcclxuICAgICAgICBcIiBbQVJFXSA9YWEgUlJcIixcclxuICAgICAgICBcIiBbQVJdTz1hYSBSUlwiLFxyXG4gICAgICAgIFwiW0FSXSM9RSBSUlwiLFxyXG4gICAgICAgIFwiIF5bQVNdIz1FIFNTXCIsXHJcbiAgICAgICAgXCJbQV1XQT1hYVwiLFxyXG4gICAgICAgIFwiW0FXXT1hYVwiLFxyXG4gICAgICAgIFwiIDpbQU5ZXT1FIG5uIElcIixcclxuICAgICAgICBcIltBXV4rIz1FXCIsXHJcbiAgICAgICAgXCIjOltBTExZXT1hYSBubiBJXCIsXHJcbiAgICAgICAgXCIgW0FMXSM9YWEgbm5cIixcclxuICAgICAgICBcIltBR0FJTl09YWEga2sgRSBublwiLFxyXG4gICAgICAgIFwiIzpbQUddRT1JIGtrXCIsXHJcbiAgICAgICAgXCJbQV1eKzojPWFhXCIsXHJcbiAgICAgICAgXCI6W0FdXisgPUVcIixcclxuICAgICAgICBcIltBXV4lPUVcIixcclxuICAgICAgICBcIiBbQVJSXT1hYSBSUlwiLFxyXG4gICAgICAgIFwiW0FSUl09YWEgUlJcIixcclxuICAgICAgICBcIiA6W0FSXSA9YWEgUlJcIixcclxuICAgICAgICBcIltBUl0gPUVcIixcclxuICAgICAgICBcIltBUl09YWEgUlJcIixcclxuICAgICAgICBcIltBSVJdPUUgUlJcIixcclxuICAgICAgICBcIltBSV09RVwiLFxyXG4gICAgICAgIFwiW0FZXT1FXCIsXHJcbiAgICAgICAgXCJbQVVdPWFhXCIsXHJcbiAgICAgICAgXCIjOltBTF0gPWFhIG5uXCIsXHJcbiAgICAgICAgXCIjOltBTFNdID1hYSBubiBTU1wiLFxyXG4gICAgICAgIFwiW0FMS109YWEga2tcIixcclxuICAgICAgICBcIltBTF1ePWFhIG5uXCIsXHJcbiAgICAgICAgXCIgOltBQkxFXT1FIFBQIGFhIG5uXCIsXHJcbiAgICAgICAgXCJbQUJMRV09YWEgUFAgYWEgbm5cIixcclxuICAgICAgICBcIltBTkddKz1FIG5uIGtrXCIsXHJcbiAgICAgICAgXCJbQV09YWFcIixcclxuICAgICAgXSxcclxuXHJcbiAgICAgIEI6IFtcclxuICAgICAgICBcIiBbQkVdXiM9UFAgSVwiLFxyXG4gICAgICAgIFwiW0JFSU5HXT1QUCBJIEkgbm5cIixcclxuICAgICAgICBcIiBbQk9USF0gPVBQIE8gVEhcIixcclxuICAgICAgICBcIiBbQlVTXSM9UFAgSSBTU1wiLFxyXG4gICAgICAgIFwiW0JVSUxdPVBQIEkgbm5cIixcclxuICAgICAgICBcIltCXT1QUFwiLFxyXG4gICAgICBdLFxyXG5cclxuICAgICAgQzogW1xyXG4gICAgICAgIFwiIFtDSF1ePWtrXCIsXHJcbiAgICAgICAgXCJeRVtDSF09a2tcIixcclxuICAgICAgICBcIltDSF09Q0hcIixcclxuICAgICAgICBcIiBTW0NJXSM9U1MgYWFcIixcclxuICAgICAgICBcIltDSV1BPVNTXCIsXHJcbiAgICAgICAgXCJbQ0ldTz1TU1wiLFxyXG4gICAgICAgIFwiW0NJXUVOPVNTXCIsXHJcbiAgICAgICAgXCJbQ10rPVNTXCIsXHJcbiAgICAgICAgXCJbQ0tdPWtrXCIsXHJcbiAgICAgICAgXCJbQ09NXSU9a2sgYWEgUFBcIixcclxuICAgICAgICBcIltDXT1ra1wiLFxyXG4gICAgICBdLFxyXG5cclxuICAgICAgRDogW1xyXG4gICAgICAgIFwiIzpbREVEXSA9REQgSSBERFwiLFxyXG4gICAgICAgIFwiLkVbRF0gPUREXCIsXHJcbiAgICAgICAgXCIjXjpFW0RdID1ERFwiLFxyXG4gICAgICAgIFwiIFtERV1eIz1ERCBJXCIsXHJcbiAgICAgICAgXCIgW0RPXSA9REQgVVwiLFxyXG4gICAgICAgIFwiIFtET0VTXT1ERCBhYSBTU1wiLFxyXG4gICAgICAgIFwiIFtET0lOR109REQgVSBJIG5uXCIsXHJcbiAgICAgICAgXCIgW0RPV109REQgYWFcIixcclxuICAgICAgICBcIltEVV1BPWtrIFVcIixcclxuICAgICAgICBcIltEXT1ERFwiLFxyXG4gICAgICBdLFxyXG5cclxuICAgICAgRTogW1xyXG4gICAgICAgIFwiIzpbRV0gPVwiLFxyXG4gICAgICAgIFwiJ146W0VdID1cIixcclxuICAgICAgICBcIiA6W0VdID1JXCIsXHJcbiAgICAgICAgXCIjW0VEXSA9RERcIixcclxuICAgICAgICBcIiM6W0VdRCA9XCIsXHJcbiAgICAgICAgXCJbRVZdRVI9RSBGRlwiLFxyXG4gICAgICAgIFwiW0VdXiU9SVwiLFxyXG4gICAgICAgIFwiW0VSSV0jPUkgUlIgSVwiLFxyXG4gICAgICAgIFwiW0VSSV09RSBSUiBJXCIsXHJcbiAgICAgICAgXCIjOltFUl0jPUVcIixcclxuICAgICAgICBcIltFUl0jPUUgUlJcIixcclxuICAgICAgICBcIltFUl09RVwiLFxyXG4gICAgICAgIFwiIFtFVkVOXT1JIEZGIEUgbm5cIixcclxuICAgICAgICBcIiM6W0VdVz1cIixcclxuICAgICAgICBcIkBbRVddPVVcIixcclxuICAgICAgICBcIltFV109SSBVXCIsXHJcbiAgICAgICAgXCJbRV1PPUlcIixcclxuICAgICAgICBcIiM6JltFU10gPUkgU1NcIixcclxuICAgICAgICBcIiM6W0VdUyA9XCIsXHJcbiAgICAgICAgXCIjOltFTFldID1ubiBJXCIsXHJcbiAgICAgICAgXCIjOltFTUVOVF09UFAgRSBubiBERFwiLFxyXG4gICAgICAgIFwiW0VGVUxdPUZGIFUgbm5cIixcclxuICAgICAgICBcIltFRV09SVwiLFxyXG4gICAgICAgIFwiW0VBUk5dPUUgbm5cIixcclxuICAgICAgICBcIiBbRUFSXV49RVwiLFxyXG4gICAgICAgIFwiW0VBRF09RSBERFwiLFxyXG4gICAgICAgIFwiIzpbRUFdID1JIGFhXCIsXHJcbiAgICAgICAgXCJbRUFdU1U9RVwiLFxyXG4gICAgICAgIFwiW0VBXT1JXCIsXHJcbiAgICAgICAgXCJbRUlHSF09RVwiLFxyXG4gICAgICAgIFwiW0VJXT1JXCIsXHJcbiAgICAgICAgXCIgW0VZRV09YWFcIixcclxuICAgICAgICBcIltFWV09SVwiLFxyXG4gICAgICAgIFwiW0VVXT1JIFVcIixcclxuICAgICAgICBcIltFXT1FXCIsXHJcbiAgICAgIF0sXHJcblxyXG4gICAgICBGOiBbXCJbRlVMXT1GRiBVIG5uXCIsIFwiW0ZdPUZGXCJdLFxyXG5cclxuICAgICAgRzogW1xyXG4gICAgICAgIFwiW0dJVl09a2sgSSBGRlwiLFxyXG4gICAgICAgIFwiIFtHXUlePWtrXCIsXHJcbiAgICAgICAgXCJbR0VdVD1rayBFXCIsXHJcbiAgICAgICAgXCJTVVtHR0VTXT1rayBrayBFIFNTXCIsXHJcbiAgICAgICAgXCJbR0ddPWtrXCIsXHJcbiAgICAgICAgXCIgQiNbR109a2tcIixcclxuICAgICAgICBcIltHXSs9a2tcIixcclxuICAgICAgICBcIltHUkVBVF09a2sgUlIgRSBERFwiLFxyXG4gICAgICAgIFwiI1tHSF09XCIsXHJcbiAgICAgICAgXCJbR109a2tcIixcclxuICAgICAgXSxcclxuXHJcbiAgICAgIEg6IFtcclxuICAgICAgICBcIiBbSEFWXT1JIGFhIEZGXCIsXHJcbiAgICAgICAgXCIgW0hFUkVdPUkgSSBSUlwiLFxyXG4gICAgICAgIFwiIFtIT1VSXT1hYSBFRVwiLFxyXG4gICAgICAgIFwiW0hPV109SSBhYVwiLFxyXG4gICAgICAgIFwiW0hdIz1JXCIsXHJcbiAgICAgICAgXCJbSF09XCIsXHJcbiAgICAgIF0sXHJcblxyXG4gICAgICBJOiBbXHJcbiAgICAgICAgXCIgW0lOXT1JIG5uXCIsXHJcbiAgICAgICAgXCIgW0ldID1hYVwiLFxyXG4gICAgICAgIFwiW0lOXUQ9YWEgbm5cIixcclxuICAgICAgICBcIltJRVJdPUkgRVwiLFxyXG4gICAgICAgIFwiIzpSW0lFRF0gPUkgRERcIixcclxuICAgICAgICBcIltJRURdID1hYSBERFwiLFxyXG4gICAgICAgIFwiW0lFTl09SSBFIG5uXCIsXHJcbiAgICAgICAgXCJbSUVdVD1hYSBFXCIsXHJcbiAgICAgICAgXCIgOltJXSU9YWFcIixcclxuICAgICAgICBcIltJXSU9SVwiLFxyXG4gICAgICAgIFwiW0lFXT1JXCIsXHJcbiAgICAgICAgXCJbSV1eKzojPUlcIixcclxuICAgICAgICBcIltJUl0jPWFhIFJSXCIsXHJcbiAgICAgICAgXCJbSVpdJT1hYSBTU1wiLFxyXG4gICAgICAgIFwiW0lTXSU9YWEgU1NcIixcclxuICAgICAgICBcIltJXUQlPWFhXCIsXHJcbiAgICAgICAgXCIrXltJXV4rPUlcIixcclxuICAgICAgICBcIltJXVQlPWFhXCIsXHJcbiAgICAgICAgXCIjXjpbSV1eKz1JXCIsXHJcbiAgICAgICAgXCJbSV1eKz1hYVwiLFxyXG4gICAgICAgIFwiW0lSXT1FXCIsXHJcbiAgICAgICAgXCJbSUdIXT1hYVwiLFxyXG4gICAgICAgIFwiW0lMRF09YWEgbm4gRERcIixcclxuICAgICAgICBcIltJR05dID1hYSBublwiLFxyXG4gICAgICAgIFwiW0lHTl1ePWFhIG5uXCIsXHJcbiAgICAgICAgXCJbSUdOXSU9YWEgbm5cIixcclxuICAgICAgICBcIltJUVVFXT1JIGtrXCIsXHJcbiAgICAgICAgXCJbSV09SVwiLFxyXG4gICAgICBdLFxyXG5cclxuICAgICAgSjogW1wiW0pdPWtrXCJdLFxyXG5cclxuICAgICAgSzogW1wiIFtLXU49XCIsIFwiW0tdPWtrXCJdLFxyXG5cclxuICAgICAgTDogW1wiW0xPXUMjPW5uIE9cIiwgXCJMW0xdPVwiLCBcIiNeOltMXSU9YWEgbm5cIiwgXCJbTEVBRF09bm4gSSBERFwiLCBcIltMXT1ublwiXSxcclxuXHJcbiAgICAgIE06IFtcIltNT1ZdPVBQIFUgRkZcIiwgXCJbTV09UFBcIl0sXHJcblxyXG4gICAgICBOOiBbXHJcbiAgICAgICAgXCJFW05HXSs9bm4ga2tcIixcclxuICAgICAgICBcIltOR11SPW5uIGtrXCIsXHJcbiAgICAgICAgXCJbTkddIz1ubiBra1wiLFxyXG4gICAgICAgIFwiW05HTF0lPW5uIGtrIGFhIG5uXCIsXHJcbiAgICAgICAgXCJbTkddPW5uXCIsXHJcbiAgICAgICAgXCJbTktdPW5uIGtrXCIsXHJcbiAgICAgICAgXCIgW05PV10gPW5uIGFhXCIsXHJcbiAgICAgICAgXCJbTl09bm5cIixcclxuICAgICAgXSxcclxuXHJcbiAgICAgIE86IFtcclxuICAgICAgICBcIltPRl0gPWFhIEZGXCIsXHJcbiAgICAgICAgXCJbT1JPVUdIXT1FIE9cIixcclxuICAgICAgICBcIiM6W09SXSA9RVwiLFxyXG4gICAgICAgIFwiIzpbT1JTXSA9RSBTU1wiLFxyXG4gICAgICAgIFwiW09SXT1hYSBSUlwiLFxyXG4gICAgICAgIFwiIFtPTkVdPUZGIGFhIG5uXCIsXHJcbiAgICAgICAgXCJbT1ddPU9cIixcclxuICAgICAgICBcIiBbT1ZFUl09TyBGRiBFXCIsXHJcbiAgICAgICAgXCJbT1ZdPWFhIEZGXCIsXHJcbiAgICAgICAgXCJbT11eJT1PXCIsXHJcbiAgICAgICAgXCJbT11eRU49T1wiLFxyXG4gICAgICAgIFwiW09dXkkjPU9cIixcclxuICAgICAgICBcIltPTF1EPU8gbm5cIixcclxuICAgICAgICBcIltPVUdIVF09YWEgRERcIixcclxuICAgICAgICBcIltPVUdIXT1hYSBGRlwiLFxyXG4gICAgICAgIFwiIFtPVV09YWFcIixcclxuICAgICAgICBcIkhbT1VdUyM9YWFcIixcclxuICAgICAgICBcIltPVVNdPWFhIFNTXCIsXHJcbiAgICAgICAgXCJbT1VSXT1hYSBSUlwiLFxyXG4gICAgICAgIFwiW09VTERdPVUgRERcIixcclxuICAgICAgICBcIl5bT1VdXkw9YWFcIixcclxuICAgICAgICBcIltPVVBdPVUgT09cIixcclxuICAgICAgICBcIltPVV09YWFcIixcclxuICAgICAgICBcIltPWV09T1wiLFxyXG4gICAgICAgIFwiW09JTkddPU8gSSBublwiLFxyXG4gICAgICAgIFwiW09JXT1PXCIsXHJcbiAgICAgICAgXCJbT09SXT1hYSBSUlwiLFxyXG4gICAgICAgIFwiW09PS109VSBra1wiLFxyXG4gICAgICAgIFwiW09PRF09VSBERFwiLFxyXG4gICAgICAgIFwiW09PXT1VXCIsXHJcbiAgICAgICAgXCJbT11FPU9cIixcclxuICAgICAgICBcIltPXSA9T1wiLFxyXG4gICAgICAgIFwiW09BXT1PXCIsXHJcbiAgICAgICAgXCIgW09OTFldPU8gbm4gbm4gSVwiLFxyXG4gICAgICAgIFwiIFtPTkNFXT1GRiBhYSBubiBTU1wiLFxyXG4gICAgICAgIFwiW09OJ1RdPU8gbm4gRERcIixcclxuICAgICAgICBcIkNbT11OPWFhXCIsXHJcbiAgICAgICAgXCJbT11ORz1hYVwiLFxyXG4gICAgICAgIFwiIF46W09dTj1hYVwiLFxyXG4gICAgICAgIFwiSVtPTl09YWEgbm5cIixcclxuICAgICAgICBcIiM6W09OXSA9YWEgbm5cIixcclxuICAgICAgICBcIiNeW09OXT1hYSBublwiLFxyXG4gICAgICAgIFwiW09dU1QgPU9cIixcclxuICAgICAgICBcIltPRl1ePWFhIEZGXCIsXHJcbiAgICAgICAgXCJbT1RIRVJdPWFhIFRIIEVcIixcclxuICAgICAgICBcIltPU1NdID1hYSBTU1wiLFxyXG4gICAgICAgIFwiI146W09NXT1hYSBQUFwiLFxyXG4gICAgICAgIFwiW09dPWFhXCIsXHJcbiAgICAgIF0sXHJcblxyXG4gICAgICBQOiBbXHJcbiAgICAgICAgXCJbUEhdPUZGXCIsXHJcbiAgICAgICAgXCJbUEVPUF09UFAgSSBQUFwiLFxyXG4gICAgICAgIFwiW1BPV109UFAgYWFcIixcclxuICAgICAgICBcIltQVVRdID1QUCBVIEREXCIsXHJcbiAgICAgICAgXCJbUF09UFBcIixcclxuICAgICAgXSxcclxuXHJcbiAgICAgIFE6IFtcIltRVUFSXT1rayBGRiBhYSBSUlwiLCBcIltRVV09a2sgRkZcIiwgXCJbUV09a2tcIl0sXHJcblxyXG4gICAgICBSOiBbXCIgW1JFXV4jPVJSIElcIiwgXCJbUl09UlJcIl0sXHJcblxyXG4gICAgICBTOiBbXHJcbiAgICAgICAgXCJbU0hdPVNTXCIsXHJcbiAgICAgICAgXCIjW1NJT05dPVNTIGFhIG5uXCIsXHJcbiAgICAgICAgXCJbU09NRV09U1MgYWEgUFBcIixcclxuICAgICAgICBcIiNbU1VSXSM9U1MgRVwiLFxyXG4gICAgICAgIFwiW1NVUl0jPVNTIEVcIixcclxuICAgICAgICBcIiNbU1VdIz1TUyBVXCIsXHJcbiAgICAgICAgXCIjW1NTVV0jPVNTIFVcIixcclxuICAgICAgICBcIiNbU0VEXSA9U1MgRERcIixcclxuICAgICAgICBcIiNbU10jPVNTXCIsXHJcbiAgICAgICAgXCJbU0FJRF09U1MgRSBERFwiLFxyXG4gICAgICAgIFwiXltTSU9OXT1TUyBhYSBublwiLFxyXG4gICAgICAgIFwiW1NdUz1cIixcclxuICAgICAgICBcIi5bU10gPVNTXCIsXHJcbiAgICAgICAgXCIjOi5FW1NdID1TU1wiLFxyXG4gICAgICAgIFwiI146IyNbU10gPVNTXCIsXHJcbiAgICAgICAgXCIjXjojW1NdID1TU1wiLFxyXG4gICAgICAgIFwiVVtTXSA9U1NcIixcclxuICAgICAgICBcIiA6I1tTXSA9U1NcIixcclxuICAgICAgICBcIiBbU0NIXT1TUyBra1wiLFxyXG4gICAgICAgIFwiW1NdQys9XCIsXHJcbiAgICAgICAgXCIjW1NNXT1TUyBQUFwiLFxyXG4gICAgICAgIFwiI1tTTl0nPVNTIGFhIG5uXCIsXHJcbiAgICAgICAgXCJbU109U1NcIixcclxuICAgICAgXSxcclxuXHJcbiAgICAgIFQ6IFtcclxuICAgICAgICBcIiBbVEhFXSA9VEggYWFcIixcclxuICAgICAgICBcIltUT10gPUREIFVcIixcclxuICAgICAgICBcIltUSEFUXSA9VEggYWEgRERcIixcclxuICAgICAgICBcIiBbVEhJU10gPVRIIEkgU1NcIixcclxuICAgICAgICBcIiBbVEhFWV09VEggRVwiLFxyXG4gICAgICAgIFwiIFtUSEVSRV09VEggRSBSUlwiLFxyXG4gICAgICAgIFwiW1RIRVJdPVRIIEVcIixcclxuICAgICAgICBcIltUSEVJUl09VEggRSBSUlwiLFxyXG4gICAgICAgIFwiIFtUSEFOXSA9VEggYWEgbm5cIixcclxuICAgICAgICBcIiBbVEhFTV0gPVRIIEUgUFBcIixcclxuICAgICAgICBcIltUSEVTRV0gPVRIIEkgU1NcIixcclxuICAgICAgICBcIiBbVEhFTl09VEggRSBublwiLFxyXG4gICAgICAgIFwiW1RIUk9VR0hdPVRIIFJSIFVcIixcclxuICAgICAgICBcIltUSE9TRV09VEggTyBTU1wiLFxyXG4gICAgICAgIFwiW1RIT1VHSF0gPVRIIE9cIixcclxuICAgICAgICBcIiBbVEhVU109VEggYWEgU1NcIixcclxuICAgICAgICBcIltUSF09VEhcIixcclxuICAgICAgICBcIiM6W1RFRF0gPUREIEkgRERcIixcclxuICAgICAgICBcIlNbVEldI049Q0hcIixcclxuICAgICAgICBcIltUSV1PPVNTXCIsXHJcbiAgICAgICAgXCJbVEldQT1TU1wiLFxyXG4gICAgICAgIFwiW1RJRU5dPVNTIGFhIG5uXCIsXHJcbiAgICAgICAgXCJbVFVSXSM9Q0ggRVwiLFxyXG4gICAgICAgIFwiW1RVXUE9Q0ggVVwiLFxyXG4gICAgICAgIFwiIFtUV09dPUREIFVcIixcclxuICAgICAgICBcIltUXT1ERFwiLFxyXG4gICAgICBdLFxyXG5cclxuICAgICAgVTogW1xyXG4gICAgICAgIFwiIFtVTl1JPUkgVSBublwiLFxyXG4gICAgICAgIFwiIFtVTl09YWEgbm5cIixcclxuICAgICAgICBcIiBbVVBPTl09YWEgUFAgYWEgbm5cIixcclxuICAgICAgICBcIkBbVVJdIz1VIFJSXCIsXHJcbiAgICAgICAgXCJbVVJdIz1JIFUgUlJcIixcclxuICAgICAgICBcIltVUl09RVwiLFxyXG4gICAgICAgIFwiW1VdXiA9YWFcIixcclxuICAgICAgICBcIltVXV5ePWFhXCIsXHJcbiAgICAgICAgXCJbVVldPWFhXCIsXHJcbiAgICAgICAgXCIgR1tVXSM9XCIsXHJcbiAgICAgICAgXCJHW1VdJT1cIixcclxuICAgICAgICBcIkdbVV0jPUZGXCIsXHJcbiAgICAgICAgXCIjTltVXT1JIFVcIixcclxuICAgICAgICBcIkBbVV09SVwiLFxyXG4gICAgICAgIFwiW1VdPUkgVVwiLFxyXG4gICAgICBdLFxyXG5cclxuICAgICAgVjogW1wiW1ZJRVddPUZGIEkgVVwiLCBcIltWXT1GRlwiXSxcclxuXHJcbiAgICAgIFc6IFtcclxuICAgICAgICBcIiBbV0VSRV09RkYgRVwiLFxyXG4gICAgICAgIFwiW1dBXVM9RkYgYWFcIixcclxuICAgICAgICBcIltXQV1UPUZGIGFhXCIsXHJcbiAgICAgICAgXCJbV0hFUkVdPUZGIEUgUlJcIixcclxuICAgICAgICBcIltXSEFUXT1GRiBhYSBERFwiLFxyXG4gICAgICAgIFwiW1dIT0xdPUkgTyBublwiLFxyXG4gICAgICAgIFwiW1dIT109SSBVXCIsXHJcbiAgICAgICAgXCJbV0hdPUZGXCIsXHJcbiAgICAgICAgXCJbV0FSXT1GRiBhYSBSUlwiLFxyXG4gICAgICAgIFwiW1dPUl1ePUZGIEVcIixcclxuICAgICAgICBcIltXUl09UlJcIixcclxuICAgICAgICBcIltXXT1GRlwiLFxyXG4gICAgICBdLFxyXG5cclxuICAgICAgWDogW1wiIFtYXT1TU1wiLCBcIltYXT1rayBTU1wiXSxcclxuXHJcbiAgICAgIFk6IFtcclxuICAgICAgICBcIltZT1VOR109SSBhYSBublwiLFxyXG4gICAgICAgIFwiIFtZT1VdPUkgVVwiLFxyXG4gICAgICAgIFwiIFtZRVNdPUkgRSBTU1wiLFxyXG4gICAgICAgIFwiIFtZXT1JXCIsXHJcbiAgICAgICAgXCIjXjpbWV0gPUlcIixcclxuICAgICAgICBcIiNeOltZXUk9SVwiLFxyXG4gICAgICAgIFwiIDpbWV0gPWFhXCIsXHJcbiAgICAgICAgXCIgOltZXSM9YWFcIixcclxuICAgICAgICBcIiA6W1ldXis6Iz1JXCIsXHJcbiAgICAgICAgXCIgOltZXV4jPUlcIixcclxuICAgICAgICBcIltZXT1JXCIsXHJcbiAgICAgIF0sXHJcblxyXG4gICAgICBaOiBbXCJbWl09U1NcIl0sXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IG9wcyA9IHtcclxuICAgICAgXCIjXCI6IFwiW0FFSU9VWV0rXCIsIC8vIE9uZSBvciBtb3JlIHZvd2VscyBBRUlPVVlcclxuICAgICAgLy8gVGhpcyBvbmUgaXMgbm90IHVzZWQ6IFwiJ1wiOiAnW0JDREZHSEpLTE1OUFFSU1RWV1haXSsnLCAvLyBPbmUgb3IgbW9yZSBjb25zb25hbnRzIEJDREZHSEpLTE1OUFFSU1RWV1haXHJcbiAgICAgIFwiLlwiOiBcIltCRFZHSkxNTlJXWl1cIiwgLy8gT25lIHZvaWNlZCBjb25zb25hbnQgQkRWR0pMTU5SV1pcclxuICAgICAgLy8gVGhpcyBvbmUgaXMgbm90IHVzZWQ6ICckJzogJ1tCRFZHSkxNTlJXWl1bRUldJywgLy8gT25lIGNvbnNvbmFudCBmb2xsb3dlZCBieSBFIG9yIElcclxuICAgICAgXCIlXCI6IFwiKD86RVJ8RXxFU3xFRHxJTkd8RUxZKVwiLCAvLyBPbmUgb2YgRVIsIEUsIEVTLCBFRCwgSU5HLCBFTFlcclxuICAgICAgXCImXCI6IFwiKD86W1NDR1pYSl18Q0h8U0gpXCIsIC8vIE9uZSBvZiBTLCBDLCBHLCBaLCBYLCBKLCBDSCwgU0hcclxuICAgICAgXCJAXCI6IFwiKD86W1RTUkRMWk5KXXxUSHxDSHxTSClcIiwgLy8gT25lIG9mIFQsIFMsIFIsIEQsIEwsIFosIE4sIEosIFRILCBDSCwgU0hcclxuICAgICAgXCJeXCI6IFwiW0JDREZHSEpLTE1OUFFSU1RWV1haXVwiLCAvLyBPbmUgY29uc29uYW50IEJDREZHSEpLTE1OUFFSU1RWV1haXHJcbiAgICAgIFwiK1wiOiBcIltFSVldXCIsIC8vIE9uZSBvZiBFLCBJLCBZXHJcbiAgICAgIFwiOlwiOiBcIltCQ0RGR0hKS0xNTlBRUlNUVldYWl0qXCIsIC8vIFplcm8gb3IgbW9yZSBjb25zb25hbnRzIEJDREZHSEpLTE1OUFFSU1RWV1haXHJcbiAgICAgIFwiIFwiOiBcIlxcXFxiXCIsIC8vIFN0YXJ0L2VuZCBvZiB0aGUgd29yZFxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBDb252ZXJ0IHJ1bGVzIHRvIHJlZ2V4XHJcbiAgICBPYmplY3Qua2V5cyh0aGlzLnJ1bGVzKS5mb3JFYWNoKChrZXkpID0+IHtcclxuICAgICAgdGhpcy5ydWxlc1trZXldID0gdGhpcy5ydWxlc1trZXldLm1hcCgocnVsZSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHBvc0wgPSBydWxlLmluZGV4T2YoXCJbXCIpO1xyXG4gICAgICAgIGNvbnN0IHBvc1IgPSBydWxlLmluZGV4T2YoXCJdXCIpO1xyXG4gICAgICAgIGNvbnN0IHBvc0UgPSBydWxlLmluZGV4T2YoXCI9XCIpO1xyXG4gICAgICAgIGNvbnN0IHN0ckxlZnQgPSBydWxlLnN1YnN0cmluZygwLCBwb3NMKTtcclxuICAgICAgICBjb25zdCBzdHJMZXR0ZXJzID0gcnVsZS5zdWJzdHJpbmcocG9zTCArIDEsIHBvc1IpO1xyXG4gICAgICAgIGNvbnN0IHN0clJpZ2h0ID0gcnVsZS5zdWJzdHJpbmcocG9zUiArIDEsIHBvc0UpO1xyXG4gICAgICAgIGNvbnN0IHN0clZpc2VtZXMgPSBydWxlLnN1YnN0cmluZyhwb3NFICsgMSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG8gPSB7IHJlZ2V4OiBcIlwiLCBtb3ZlOiAwLCB2aXNlbWVzOiBbXSB9O1xyXG5cclxuICAgICAgICBsZXQgZXhwID0gXCJcIjtcclxuICAgICAgICBleHAgKz0gWy4uLnN0ckxlZnRdLm1hcCgoeCkgPT4gb3BzW3hdIHx8IHgpLmpvaW4oXCJcIik7XHJcbiAgICAgICAgY29uc3QgY3R4TGV0dGVycyA9IFsuLi5zdHJMZXR0ZXJzXTtcclxuICAgICAgICBjdHhMZXR0ZXJzWzBdID0gY3R4TGV0dGVyc1swXS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgIGV4cCArPSBjdHhMZXR0ZXJzLmpvaW4oXCJcIik7XHJcbiAgICAgICAgby5tb3ZlID0gY3R4TGV0dGVycy5sZW5ndGg7XHJcbiAgICAgICAgZXhwICs9IFsuLi5zdHJSaWdodF0ubWFwKCh4KSA9PiBvcHNbeF0gfHwgeCkuam9pbihcIlwiKTtcclxuICAgICAgICBvLnJlZ2V4ID0gbmV3IFJlZ0V4cChleHApIGFzIGFueTtcclxuXHJcbiAgICAgICAgaWYgKHN0clZpc2VtZXMubGVuZ3RoKSB7XHJcbiAgICAgICAgICBzdHJWaXNlbWVzLnNwbGl0KFwiIFwiKS5mb3JFYWNoKCh2aXNlbWUpID0+IHtcclxuICAgICAgICAgICAgby52aXNlbWVzLnB1c2godmlzZW1lKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIG87XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gVmlzZW1lIGR1cmF0aW9ucyBpbiByZWxhdGl2ZSB1bml0ICgxPWF2ZXJhZ2UpXHJcbiAgICAvLyBUT0RPOiBDaGVjayBmb3Igc3RhdGlzdGljcyBmb3IgRW5nbGlzaFxyXG4gICAgdGhpcy52aXNlbWVEdXJhdGlvbnMgPSB7XHJcbiAgICAgIGFhOiAwLjk1LFxyXG4gICAgICBFOiAwLjksXHJcbiAgICAgIEk6IDAuOTIsXHJcbiAgICAgIE86IDAuOTYsXHJcbiAgICAgIFU6IDAuOTUsXHJcbiAgICAgIFBQOiAxLjA4LFxyXG4gICAgICBTUzogMS4yMyxcclxuICAgICAgVEg6IDEsXHJcbiAgICAgIEREOiAxLjA1LFxyXG4gICAgICBGRjogMS4wLFxyXG4gICAgICBrazogMS4yMSxcclxuICAgICAgbm46IDAuODgsXHJcbiAgICAgIFJSOiAwLjg4LFxyXG4gICAgICBzaWw6IDEsXHJcbiAgICB9O1xyXG5cclxuICAgIC8vIFBhdXNlcyBpbiByZWxhdGl2ZSB1bml0cyAoMT1hdmVyYWdlKVxyXG4gICAgdGhpcy5zcGVjaWFsRHVyYXRpb25zID0geyBcIiBcIjogMSwgXCIsXCI6IDMsIFwiLVwiOiAwLjUsIFwiJ1wiOiAwLjUgfTtcclxuXHJcbiAgICAvLyBFbmdsaXNoIG51bWJlciB3b3Jkc1xyXG4gICAgdGhpcy5kaWdpdHMgPSBbXHJcbiAgICAgIFwib2hcIixcclxuICAgICAgXCJvbmVcIixcclxuICAgICAgXCJ0d29cIixcclxuICAgICAgXCJ0aHJlZVwiLFxyXG4gICAgICBcImZvdXJcIixcclxuICAgICAgXCJmaXZlXCIsXHJcbiAgICAgIFwic2l4XCIsXHJcbiAgICAgIFwic2V2ZW5cIixcclxuICAgICAgXCJlaWdodFwiLFxyXG4gICAgICBcIm5pbmVcIixcclxuICAgIF07XHJcbiAgICB0aGlzLm9uZXMgPSBbXHJcbiAgICAgIFwiXCIsXHJcbiAgICAgIFwib25lXCIsXHJcbiAgICAgIFwidHdvXCIsXHJcbiAgICAgIFwidGhyZWVcIixcclxuICAgICAgXCJmb3VyXCIsXHJcbiAgICAgIFwiZml2ZVwiLFxyXG4gICAgICBcInNpeFwiLFxyXG4gICAgICBcInNldmVuXCIsXHJcbiAgICAgIFwiZWlnaHRcIixcclxuICAgICAgXCJuaW5lXCIsXHJcbiAgICBdO1xyXG4gICAgdGhpcy50ZW5zID0gW1xyXG4gICAgICBcIlwiLFxyXG4gICAgICBcIlwiLFxyXG4gICAgICBcInR3ZW50eVwiLFxyXG4gICAgICBcInRoaXJ0eVwiLFxyXG4gICAgICBcImZvcnR5XCIsXHJcbiAgICAgIFwiZmlmdHlcIixcclxuICAgICAgXCJzaXh0eVwiLFxyXG4gICAgICBcInNldmVudHlcIixcclxuICAgICAgXCJlaWdodHlcIixcclxuICAgICAgXCJuaW5ldHlcIixcclxuICAgIF07XHJcbiAgICB0aGlzLnRlZW5zID0gW1xyXG4gICAgICBcInRlblwiLFxyXG4gICAgICBcImVsZXZlblwiLFxyXG4gICAgICBcInR3ZWx2ZVwiLFxyXG4gICAgICBcInRoaXJ0ZWVuXCIsXHJcbiAgICAgIFwiZm91cnRlZW5cIixcclxuICAgICAgXCJmaWZ0ZWVuXCIsXHJcbiAgICAgIFwic2l4dGVlblwiLFxyXG4gICAgICBcInNldmVudGVlblwiLFxyXG4gICAgICBcImVpZ2h0ZWVuXCIsXHJcbiAgICAgIFwibmluZXRlZW5cIixcclxuICAgIF07XHJcblxyXG4gICAgLy8gU3ltYm9scyB0byBFbmdsaXNoXHJcbiAgICB0aGlzLnN5bWJvbHMgPSB7XHJcbiAgICAgIFwiJVwiOiBcInBlcmNlbnRcIixcclxuICAgICAgXCLigqxcIjogXCJldXJvc1wiLFxyXG4gICAgICBcIiZcIjogXCJhbmRcIixcclxuICAgICAgXCIrXCI6IFwicGx1c1wiLFxyXG4gICAgICAkOiBcImRvbGxhcnNcIixcclxuICAgIH07XHJcbiAgICB0aGlzLnN5bWJvbHNSZWcgPSAvWyXigqwmXFwrXFwkXS9nO1xyXG5cclxuICAgIC8vIElQQSB0byBPY3VsdXMgdmlzZW1lIG1hcHBpbmdcclxuICAgIHRoaXMuZXNwZWFrVG9PY3VsdXNWaXNlbWUgPSB7XHJcbiAgICAgIC8vIFZvd2Vsc1xyXG4gICAgICBpy5A6IFwiSVwiLFxyXG4gICAgICDJqjogXCJJXCIsXHJcbiAgICAgIGU6IFwiRVwiLFxyXG4gICAgICDDpjogXCJhYVwiLFxyXG4gICAgICBhy5A6IFwiYWFcIixcclxuICAgICAgyZI6IFwiT1wiLFxyXG4gICAgICDJlMuQOiBcIk9cIixcclxuICAgICAgyoo6IFwiVVwiLFxyXG4gICAgICB1y5A6IFwiVVwiLFxyXG4gICAgICDKjDogXCJhYVwiLFxyXG4gICAgICDJmTogXCJFXCIsXHJcblxyXG4gICAgICAvLyBEaXBodGhvbmdzXHJcbiAgICAgIGXJqjogXCJFXCIsXHJcbiAgICAgIGHJqjogXCJJXCIsXHJcbiAgICAgIMmUyao6IFwiT1wiLFxyXG4gICAgICBhyoo6IFwiT1wiLFxyXG4gICAgICBvyoo6IFwiT1wiLFxyXG4gICAgICDJqsmZOiBcIklcIixcclxuICAgICAgZcmZOiBcIkVcIixcclxuICAgICAgyorJmTogXCJVXCIsXHJcblxyXG4gICAgICAvLyBDb25zb25hbnRzXHJcbiAgICAgIHA6IFwiUFBcIixcclxuICAgICAgYjogXCJQUFwiLFxyXG4gICAgICB0OiBcIkREXCIsXHJcbiAgICAgIGQ6IFwiRERcIixcclxuICAgICAgazogXCJra1wiLFxyXG4gICAgICBnOiBcImtrXCIsXHJcbiAgICAgIHTKgzogXCJDSFwiLFxyXG4gICAgICBkypI6IFwiQ0hcIixcclxuICAgICAgZjogXCJGRlwiLFxyXG4gICAgICB2OiBcIkZGXCIsXHJcbiAgICAgIM64OiBcIlRIXCIsXHJcbiAgICAgIMOwOiBcIlRIXCIsXHJcbiAgICAgIHM6IFwiU1NcIixcclxuICAgICAgejogXCJTU1wiLFxyXG4gICAgICDKgzogXCJTU1wiLFxyXG4gICAgICDKkjogXCJTU1wiLFxyXG4gICAgICBoOiBcInNpbFwiLFxyXG4gICAgICBtOiBcIlBQXCIsXHJcbiAgICAgIG46IFwibm5cIixcclxuICAgICAgxYs6IFwibm5cIixcclxuICAgICAgbDogXCJERFwiLFxyXG4gICAgICByOiBcIlJSXCIsXHJcbiAgICAgIMm5OiBcIlJSXCIsXHJcbiAgICAgIMm+OiBcIlJSXCIsXHJcbiAgICAgIHc6IFwiVVwiLFxyXG4gICAgICBqOiBcIklcIixcclxuXHJcbiAgICAgIC8vIEFkZGl0aW9uYWwgcGhvbmVtZXMgZm9yIG90aGVyIGxhbmd1YWdlc1xyXG4gICAgICDJkTogXCJhYVwiLFxyXG4gICAgICDJkcuQOiBcImFhXCIsXHJcbiAgICAgIMmQOiBcImFhXCIsXHJcbiAgICAgIMmcOiBcIkVcIixcclxuICAgICAgw7g6IFwiRVwiLFxyXG4gICAgICB5OiBcIklcIixcclxuICAgICAgZcuQOiBcIkVcIixcclxuICAgICAgxZM6IFwiRVwiLFxyXG4gICAgICDJtjogXCJhYVwiLFxyXG4gICAgICDJksyDOiBcIk9cIixcclxuICAgICAgw6M6IFwiYWFcIixcclxuICAgICAgw7U6IFwiT1wiLFxyXG4gICAgICDJsjogXCJublwiLFxyXG4gICAgICDKjjogXCJublwiLFxyXG4gICAgICDKjTogXCJVXCIsXHJcbiAgICAgIMOnOiBcIlNTXCIsXHJcbiAgICAgIHg6IFwia2tcIixcclxuICAgICAgyaM6IFwia2tcIixcclxuICAgICAgzrI6IFwiRkZcIixcclxuICAgICAgypQ6IFwic2lsXCIsXHJcbiAgICAgIMqVOiBcInNpbFwiLFxyXG4gICAgICDJrDogXCJTU1wiLFxyXG4gICAgICDJrjogXCJTU1wiLFxyXG4gICAgICDKojogXCJzaWxcIixcclxuICAgICAgyqE6IFwic2lsXCIsXHJcbiAgICAgIMmWOiBcIkREXCIsXHJcbiAgICAgIMmXOiBcIkREXCIsXHJcbiAgICAgIMqEOiBcIkREXCIsXHJcbiAgICAgIMmfOiBcIkREXCIsXHJcbiAgICAgIMmgOiBcImtrXCIsXHJcbiAgICAgIMqbOiBcImtrXCIsXHJcbiAgICB9O1xyXG5cclxuICAgIC8vIFB1bmN0dWF0aW9uIHRvIGJlIHByZXNlcnZlZFxyXG4gICAgdGhpcy5wdW5jdHVhdGlvbiA9IHtcclxuICAgICAgXCI7XCI6IDEsXHJcbiAgICAgIFwiOlwiOiAxLFxyXG4gICAgICBcIixcIjogMSxcclxuICAgICAgXCIuXCI6IDEsXHJcbiAgICAgIFwiIVwiOiAxLFxyXG4gICAgICBcIj9cIjogMSxcclxuICAgICAgXCLCoVwiOiAxLFxyXG4gICAgICBcIsK/XCI6IDEsXHJcbiAgICAgIFwi4oCUXCI6IDEsXHJcbiAgICAgICdcIic6IDEsXHJcbiAgICAgIFwi4oCmXCI6IDEsXHJcbiAgICAgIFwiwqtcIjogMSxcclxuICAgICAgXCLCu1wiOiAxLFxyXG4gICAgICAnXCInOiAxLFxyXG4gICAgICAnXCInOiAxLFxyXG4gICAgICBcIihcIjogMSxcclxuICAgICAgXCIpXCI6IDEsXHJcbiAgICAgIFwie1wiOiAxLFxyXG4gICAgICBcIn1cIjogMSxcclxuICAgICAgXCJbXCI6IDEsXHJcbiAgICAgIFwiXVwiOiAxLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGNvbnZlcnRfZGlnaXRfYnlfZGlnaXQobnVtOiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IG51bUFycmF5ID0gbnVtLnNwbGl0KFwiXCIpO1xyXG4gICAgbGV0IG51bVdvcmRzID0gXCJcIjtcclxuICAgIGZvciAobGV0IG0gPSAwOyBtIDwgbnVtQXJyYXkubGVuZ3RoOyBtKyspIHtcclxuICAgICAgbnVtV29yZHMgKz0gdGhpcy5kaWdpdHNbbnVtQXJyYXlbbV1dICsgXCIgXCI7XHJcbiAgICB9XHJcbiAgICBudW1Xb3JkcyA9IG51bVdvcmRzLnN1YnN0cmluZygwLCBudW1Xb3Jkcy5sZW5ndGggLSAxKTsgLy9raWxsIGZpbmFsIHNwYWNlXHJcbiAgICByZXR1cm4gbnVtV29yZHM7XHJcbiAgfVxyXG5cclxuICBjb252ZXJ0X3NldHNfb2ZfdHdvKG51bTogc3RyaW5nKSB7XHJcbiAgICBsZXQgZmlyc3ROdW1IYWxmID0gU3RyaW5nKG51bSkuc3Vic3RyaW5nKDAsIDIpO1xyXG4gICAgbGV0IHNlY29uZE51bUhhbGYgPSBTdHJpbmcobnVtKS5zdWJzdHJpbmcoMiwgNCk7XHJcbiAgICBsZXQgbnVtV29yZHMgPSB0aGlzLmNvbnZlcnRfdGVucyhmaXJzdE51bUhhbGYpO1xyXG4gICAgbnVtV29yZHMgKz0gXCIgXCIgKyB0aGlzLmNvbnZlcnRfdGVucyhzZWNvbmROdW1IYWxmKTtcclxuICAgIHJldHVybiBudW1Xb3JkcztcclxuICB9XHJcblxyXG4gIGNvbnZlcnRfbWlsbGlvbnMobnVtOiBzdHJpbmcpIHtcclxuICAgIGlmIChOdW1iZXIobnVtKSA+PSAxMDAwMDAwKSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgdGhpcy5jb252ZXJ0X21pbGxpb25zKE1hdGguZmxvb3IoTnVtYmVyKG51bSkgLyAxMDAwMDAwKS50b1N0cmluZygpKSArXHJcbiAgICAgICAgXCIgbWlsbGlvbiBcIiArXHJcbiAgICAgICAgdGhpcy5jb252ZXJ0X3Rob3VzYW5kcygoTnVtYmVyKG51bSkgJSAxMDAwMDAwKS50b1N0cmluZygpKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuY29udmVydF90aG91c2FuZHMobnVtKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnZlcnRfdGhvdXNhbmRzKG51bTogc3RyaW5nKSB7XHJcbiAgICBpZiAoTnVtYmVyKG51bSkgPj0gMTAwMCkge1xyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIHRoaXMuY29udmVydF9odW5kcmVkcyhNYXRoLmZsb29yKE51bWJlcihudW0pIC8gMTAwMCkudG9TdHJpbmcoKSkgK1xyXG4gICAgICAgIFwiIHRob3VzYW5kIFwiICtcclxuICAgICAgICB0aGlzLmNvbnZlcnRfaHVuZHJlZHMoKE51bWJlcihudW0pICUgMTAwMCkudG9TdHJpbmcoKSlcclxuICAgICAgKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmNvbnZlcnRfaHVuZHJlZHMobnVtKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnZlcnRfaHVuZHJlZHMobnVtOiBzdHJpbmcpIHtcclxuICAgIGlmIChOdW1iZXIobnVtKSA+IDk5KSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgdGhpcy5vbmVzW01hdGguZmxvb3IoTnVtYmVyKG51bSkgLyAxMDApXSArXHJcbiAgICAgICAgXCIgaHVuZHJlZCBcIiArXHJcbiAgICAgICAgdGhpcy5jb252ZXJ0X3RlbnMoKE51bWJlcihudW0pICUgMTAwKS50b1N0cmluZygpKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuY29udmVydF90ZW5zKG51bSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb252ZXJ0X3RlbnMobnVtOiBzdHJpbmcpIHtcclxuICAgIGlmIChOdW1iZXIobnVtKSA8IDEwKSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgKE51bWJlcihudW0pICE9IDAgJiYgbnVtLnRvU3RyaW5nKCkuc3RhcnRzV2l0aChcIjBcIikgPyBcIm9oIFwiIDogXCJcIikgK1xyXG4gICAgICAgIHRoaXMub25lc1tOdW1iZXIobnVtKV1cclxuICAgICAgKTtcclxuICAgIH0gZWxzZSBpZiAoTnVtYmVyKG51bSkgPj0gMTAgJiYgTnVtYmVyKG51bSkgPCAyMCkge1xyXG4gICAgICByZXR1cm4gdGhpcy50ZWVuc1tOdW1iZXIobnVtKSAtIDEwXTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgdGhpcy50ZW5zW01hdGguZmxvb3IoTnVtYmVyKG51bSkgLyAxMCldICtcclxuICAgICAgICBcIiBcIiArXHJcbiAgICAgICAgdGhpcy5vbmVzW051bWJlcihudW0pICUgMTBdXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb252ZXJ0TnVtYmVyVG9Xb3JkcyhudW06IHN0cmluZykge1xyXG4gICAgaWYgKG51bSA9PSBcIjBcIikge1xyXG4gICAgICByZXR1cm4gXCJ6ZXJvXCI7XHJcbiAgICB9IGVsc2UgaWYgKG51bS5zdGFydHNXaXRoKFwiMFwiKSkge1xyXG4gICAgICByZXR1cm4gdGhpcy5jb252ZXJ0X2RpZ2l0X2J5X2RpZ2l0KG51bSk7XHJcbiAgICB9IGVsc2UgaWYgKFxyXG4gICAgICAoTnVtYmVyKG51bSkgPCAxMDAwICYmIE51bWJlcihudW0pID4gOTkpIHx8XHJcbiAgICAgIChOdW1iZXIobnVtKSA+IDEwMDAwICYmIE51bWJlcihudW0pIDwgMTAwMDAwMClcclxuICAgICkge1xyXG4gICAgICAvL3JlYWQgYXJlYSBhbmQgemlwIGNvZGVzIGRpZ2l0IGJ5IGRpZ2l0XHJcbiAgICAgIHJldHVybiB0aGlzLmNvbnZlcnRfZGlnaXRfYnlfZGlnaXQobnVtKTtcclxuICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgIChOdW1iZXIobnVtKSA+IDEwMDAgJiYgTnVtYmVyKG51bSkgPCAyMDAwKSB8fFxyXG4gICAgICAoTnVtYmVyKG51bSkgPiAyMDA5ICYmIE51bWJlcihudW0pIDwgMzAwMClcclxuICAgICkge1xyXG4gICAgICAvL3JlYWQgeWVhcnMgYXMgdHdvIHNldHMgb2YgdHdvIGRpZ2l0c1xyXG4gICAgICByZXR1cm4gTnVtYmVyKG51bSkgJSAxMDAgIT0gMFxyXG4gICAgICAgID8gdGhpcy5jb252ZXJ0X3NldHNfb2ZfdHdvKG51bSlcclxuICAgICAgICA6IHRoaXMuY29udmVydF90ZW5zKG51bS5zdWJzdHJpbmcoMCwgMikpICsgXCIgaHVuZHJlZFwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuY29udmVydF9taWxsaW9ucyhudW0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJlUHJvY2Vzc1RleHQoczogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gc1xyXG4gICAgICAucmVwbGFjZSgvWyNfKlwiOjtdL2csIFwiXCIpXHJcbiAgICAgIC5yZXBsYWNlKHRoaXMuc3ltYm9sc1JlZywgKHN5bWJvbCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBcIiBcIiArIHRoaXMuc3ltYm9sc1tzeW1ib2xdICsgXCIgXCI7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5yZXBsYWNlKC8oXFxkKVxcLihcXGQpL2csIFwiJDEgcG9pbnQgJDJcIikgLy8gTnVtYmVyIHNlcGFyYXRvclxyXG4gICAgICAucmVwbGFjZSgvXFxkKy9nLCB0aGlzLmNvbnZlcnROdW1iZXJUb1dvcmRzLmJpbmQodGhpcykpIC8vIE51bWJlcnMgdG8gd29yZHNcclxuICAgICAgLnJlcGxhY2UoLyhcXEQpXFwxXFwxKy9nLCBcIiQxJDFcIikgLy8gbWF4IDIgcmVwZWF0aW5nIGNoYXJzXHJcbiAgICAgIC5yZXBsYWNlQWxsKFwiICBcIiwgXCIgXCIpIC8vIE9ubHkgb25lIHJlcGVhdGluZyBzcGFjZVxyXG4gICAgICAubm9ybWFsaXplKFwiTkZEXCIpXHJcbiAgICAgIC5yZXBsYWNlKC9bXFx1MDMwMC1cXHUwMzZmXS9nLCBcIlwiKVxyXG4gICAgICAubm9ybWFsaXplKFwiTkZDXCIpIC8vIFJlbW92ZSBub24tRW5nbGlzaCBkaWFjcml0aWNzXHJcbiAgICAgIC50cmltKCk7XHJcbiAgfVxyXG5cclxuICB3b3Jkc1RvVmlzZW1lcyh3OiBzdHJpbmcpIHtcclxuICAgIGxldCBvID0ge1xyXG4gICAgICB3b3Jkczogdy50b1VwcGVyQ2FzZSgpLFxyXG4gICAgICB2aXNlbWVzOiBbXSxcclxuICAgICAgdGltZXM6IFtdLFxyXG4gICAgICBkdXJhdGlvbnM6IFtdLFxyXG4gICAgICBpOiAwLFxyXG4gICAgfTtcclxuICAgIGxldCB0ID0gMDtcclxuXHJcbiAgICBjb25zdCBjaGFycyA9IFsuLi5vLndvcmRzXTtcclxuICAgIHdoaWxlIChvLmkgPCBjaGFycy5sZW5ndGgpIHtcclxuICAgICAgY29uc3QgYyA9IGNoYXJzW28uaV07XHJcbiAgICAgIGNvbnN0IHJ1bGVzZXQgPSB0aGlzLnJ1bGVzW2NdO1xyXG4gICAgICBpZiAocnVsZXNldCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcnVsZXNldC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgY29uc3QgcnVsZSA9IHJ1bGVzZXRbaV07XHJcbiAgICAgICAgICBjb25zdCB0ZXN0ID1cclxuICAgICAgICAgICAgby53b3Jkcy5zdWJzdHJpbmcoMCwgby5pKSArXHJcbiAgICAgICAgICAgIGMudG9Mb3dlckNhc2UoKSArXHJcbiAgICAgICAgICAgIG8ud29yZHMuc3Vic3RyaW5nKG8uaSArIDEpO1xyXG4gICAgICAgICAgbGV0IG1hdGNoZXMgPSB0ZXN0Lm1hdGNoKHJ1bGUucmVnZXgpO1xyXG4gICAgICAgICAgaWYgKG1hdGNoZXMpIHtcclxuICAgICAgICAgICAgcnVsZS52aXNlbWVzLmZvckVhY2goKHZpc2VtZSkgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgIG8udmlzZW1lcy5sZW5ndGggJiZcclxuICAgICAgICAgICAgICAgIG8udmlzZW1lc1tvLnZpc2VtZXMubGVuZ3RoIC0gMV0gPT09IHZpc2VtZVxyXG4gICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZCA9IDAuNyAqICh0aGlzLnZpc2VtZUR1cmF0aW9uc1t2aXNlbWVdIHx8IDEpO1xyXG4gICAgICAgICAgICAgICAgby5kdXJhdGlvbnNbby5kdXJhdGlvbnMubGVuZ3RoIC0gMV0gKz0gZDtcclxuICAgICAgICAgICAgICAgIHQgKz0gZDtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZCA9IHRoaXMudmlzZW1lRHVyYXRpb25zW3Zpc2VtZV0gfHwgMTtcclxuICAgICAgICAgICAgICAgIG8udmlzZW1lcy5wdXNoKHZpc2VtZSk7XHJcbiAgICAgICAgICAgICAgICBvLnRpbWVzLnB1c2godCk7XHJcbiAgICAgICAgICAgICAgICBvLmR1cmF0aW9ucy5wdXNoKGQpO1xyXG4gICAgICAgICAgICAgICAgdCArPSBkO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIG8uaSArPSBydWxlLm1vdmU7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBvLmkrKztcclxuICAgICAgICB0ICs9IHRoaXMuc3BlY2lhbER1cmF0aW9uc1tjXSB8fCAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG87XHJcbiAgfVxyXG59XHJcblxyXG5jbGFzcyBMaXBzeW5jVGEge1xyXG4gIHJ1bGVzOiBhbnk7XHJcbiAgdmlzZW1lRHVyYXRpb25zOiBhbnk7XHJcbiAgc3BlY2lhbER1cmF0aW9uczogYW55O1xyXG4gIGRpZ2l0czogc3RyaW5nW107XHJcbiAgdGVuczogc3RyaW5nW107XHJcbiAgaHVuZHJlZHM6IHN0cmluZ1tdO1xyXG4gIHRob3VzYW5kczogc3RyaW5nO1xyXG4gIGxha2hzOiBzdHJpbmc7XHJcbiAgY3JvcmVzOiBzdHJpbmc7XHJcbiAgc3ltYm9sczogUmVjb3JkPHN0cmluZywgc3RyaW5nPjtcclxuICBzeW1ib2xzUmVnOiBSZWdFeHA7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5ydWxlcyA9IHtcclxuICAgICAg4K6FOiBbeyByZWdleDogL+CuhS8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcImFhXCJdIH1dLCAvLyBhXHJcbiAgICAgIOCuhjogW3sgcmVnZXg6IC/groYvLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJhYVwiXSB9XSwgLy8gYWFcclxuICAgICAg4K6HOiBbeyByZWdleDogL+Cuhy8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIklcIl0gfV0sIC8vIGlcclxuICAgICAg4K6IOiBbeyByZWdleDogL+CuiC8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIklcIl0gfV0sIC8vIGlpXHJcbiAgICAgIOCuiTogW3sgcmVnZXg6IC/grokvLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJVXCJdIH1dLCAvLyB1XHJcbiAgICAgIOCuijogW3sgcmVnZXg6IC/groovLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJVXCJdIH1dLCAvLyB1dVxyXG4gICAgICDgro46IFt7IHJlZ2V4OiAv4K6OLywgbW92ZTogMSwgdmlzZW1lczogW1wiRVwiXSB9XSwgLy8gZVxyXG4gICAgICDgro86IFt7IHJlZ2V4OiAv4K6PLywgbW92ZTogMSwgdmlzZW1lczogW1wiRVwiXSB9XSwgLy8gZWVcclxuICAgICAg4K6QOiBbeyByZWdleDogL+CukC8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcImFhXCIsIFwiSVwiXSB9XSwgLy8gYWlcclxuICAgICAg4K6SOiBbeyByZWdleDogL+Cuki8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIk9cIl0gfV0sIC8vIG9cclxuICAgICAg4K6TOiBbeyByZWdleDogL+Cuky8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIk9cIl0gfV0sIC8vIG9vXHJcbiAgICAgIOCulDogW3sgcmVnZXg6IC/grpQvLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJhYVwiLCBcIlVcIl0gfV0sIC8vIGF1XHJcblxyXG4gICAgICDgrpXgr406IFt7IHJlZ2V4OiAv4K6V4K+NLywgbW92ZTogMSwgdmlzZW1lczogW1wia2tcIl0gfV0sIC8vIGtcclxuICAgICAg4K6Z4K+NOiBbeyByZWdleDogL+CumeCvjS8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIm5uXCIsIFwia2tcIl0gfV0sIC8vIG5nXHJcbiAgICAgIOCumuCvjTogW3sgcmVnZXg6IC/grprgr40vLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJDSFwiXSB9XSwgLy8gY2hcclxuICAgICAg4K6e4K+NOiBbeyByZWdleDogL+CunuCvjS8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIm5uXCIsIFwiQ0hcIl0gfV0sIC8vIG5qXHJcbiAgICAgIOCun+CvjTogW3sgcmVnZXg6IC/grp/gr40vLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJERFwiXSB9XSwgLy8gdCAocmV0cm9mbGV4KVxyXG4gICAgICDgrqPgr406IFt7IHJlZ2V4OiAv4K6j4K+NLywgbW92ZTogMSwgdmlzZW1lczogW1wibm5cIl0gfV0sIC8vIG4gKHJldHJvZmxleClcclxuICAgICAg4K6k4K+NOiBbeyByZWdleDogL+CupOCvjS8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlRIXCJdIH1dLCAvLyB0aFxyXG4gICAgICDgrqjgr406IFt7IHJlZ2V4OiAv4K6o4K+NLywgbW92ZTogMSwgdmlzZW1lczogW1wibm5cIl0gfV0sIC8vIG5cclxuICAgICAg4K6q4K+NOiBbeyByZWdleDogL+CuquCvjS8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlBQXCJdIH1dLCAvLyBwXHJcbiAgICAgIOCuruCvjTogW3sgcmVnZXg6IC/grq7gr40vLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJQUFwiXSB9XSwgLy8gbVxyXG4gICAgICDgrq/gr406IFt7IHJlZ2V4OiAv4K6v4K+NLywgbW92ZTogMSwgdmlzZW1lczogW1wiSVwiXSB9XSwgLy8geVxyXG4gICAgICDgrrDgr406IFt7IHJlZ2V4OiAv4K6w4K+NLywgbW92ZTogMSwgdmlzZW1lczogW1wiUlJcIl0gfV0sIC8vIHJcclxuICAgICAg4K6y4K+NOiBbeyByZWdleDogL+CusuCvjS8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIm5uXCJdIH1dLCAvLyBsXHJcbiAgICAgIOCuteCvjTogW3sgcmVnZXg6IC/grrXgr40vLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJGRlwiXSB9XSwgLy8gdlxyXG4gICAgICDgrrTgr406IFt7IHJlZ2V4OiAv4K604K+NLywgbW92ZTogMSwgdmlzZW1lczogW1wibm5cIl0gfV0sIC8vIHpoICh1bmlxdWUgVGFtaWwgc291bmQpXHJcbiAgICAgIOCus+CvjTogW3sgcmVnZXg6IC/grrPgr40vLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJublwiXSB9XSwgLy8gbCAocmV0cm9mbGV4KVxyXG4gICAgICDgrrHgr406IFt7IHJlZ2V4OiAv4K6x4K+NLywgbW92ZTogMSwgdmlzZW1lczogW1wiUlJcIl0gfV0sIC8vIHIgKGhhcmQpXHJcbiAgICAgIOCuqeCvjTogW3sgcmVnZXg6IC/grqngr40vLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJublwiXSB9XSwgLy8gbiAoZGVudGFsKVxyXG4gICAgICDgrpzgr406IFt7IHJlZ2V4OiAv4K6c4K+NLywgbW92ZTogMSwgdmlzZW1lczogW1wiU1NcIl0gfV0sIC8vIGpcclxuICAgICAg4K634K+NOiBbeyByZWdleDogL+Cut+CvjS8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlNTXCJdIH1dLCAvLyBzaFxyXG4gICAgICDgrrjgr406IFt7IHJlZ2V4OiAv4K644K+NLywgbW92ZTogMSwgdmlzZW1lczogW1wiU1NcIl0gfV0sIC8vIHNcclxuICAgICAg4K654K+NOiBbeyByZWdleDogL+CuueCvjS8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcImtrXCJdIH1dLCAvLyBoXHJcblxyXG4gICAgICDgrpU6IFt7IHJlZ2V4OiAv4K6VLywgbW92ZTogMSwgdmlzZW1lczogW1wia2tcIiwgXCJhYVwiXSB9XSwgLy8ga2FcclxuICAgICAg4K6V4K6+OiBbeyByZWdleDogL+CuleCuvi8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcImtrXCIsIFwiYWFcIl0gfV0sIC8vIGthYVxyXG4gICAgICDgrpXgrr86IFt7IHJlZ2V4OiAv4K6V4K6/LywgbW92ZTogMSwgdmlzZW1lczogW1wia2tcIiwgXCJJXCJdIH1dLCAvLyBraVxyXG4gICAgICDgrpXgr4A6IFt7IHJlZ2V4OiAv4K6V4K+ALywgbW92ZTogMSwgdmlzZW1lczogW1wia2tcIiwgXCJJXCJdIH1dLCAvLyBraWlcclxuICAgICAg4K6V4K+BOiBbeyByZWdleDogL+CuleCvgS8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcImtrXCIsIFwiVVwiXSB9XSwgLy8ga3VcclxuICAgICAg4K6V4K+COiBbeyByZWdleDogL+CuleCvgi8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcImtrXCIsIFwiVVwiXSB9XSwgLy8ga3V1XHJcbiAgICAgIOCuleCvhjogW3sgcmVnZXg6IC/grpXgr4YvLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJra1wiLCBcIkVcIl0gfV0sIC8vIGtlXHJcbiAgICAgIOCuleCvhzogW3sgcmVnZXg6IC/grpXgr4cvLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJra1wiLCBcIkVcIl0gfV0sIC8vIGtlZVxyXG4gICAgICDgrpXgr4g6IFt7IHJlZ2V4OiAv4K6V4K+ILywgbW92ZTogMSwgdmlzZW1lczogW1wia2tcIiwgXCJhYVwiLCBcIklcIl0gfV0sIC8vIGthaVxyXG4gICAgICDgrpXgr4o6IFt7IHJlZ2V4OiAv4K6V4K+KLywgbW92ZTogMSwgdmlzZW1lczogW1wia2tcIiwgXCJPXCJdIH1dLCAvLyBrb1xyXG4gICAgICDgrpXgr4s6IFt7IHJlZ2V4OiAv4K6V4K+LLywgbW92ZTogMSwgdmlzZW1lczogW1wia2tcIiwgXCJPXCJdIH1dLCAvLyBrb29cclxuICAgICAg4K6V4K+MOiBbeyByZWdleDogL+CuleCvjC8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcImtrXCIsIFwiYWFcIiwgXCJVXCJdIH1dLCAvLyBrYXVcclxuXHJcbiAgICAgIOCuqjogW3sgcmVnZXg6IC/grqovLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJQUFwiLCBcImFhXCJdIH1dLCAvLyBwYVxyXG4gICAgICDgrqrgrr46IFt7IHJlZ2V4OiAv4K6q4K6+LywgbW92ZTogMSwgdmlzZW1lczogW1wiUFBcIiwgXCJhYVwiXSB9XSwgLy8gcGFhXHJcbiAgICAgIOCuquCuvzogW3sgcmVnZXg6IC/grqrgrr8vLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJQUFwiLCBcIklcIl0gfV0sIC8vIHBpXHJcbiAgICAgIOCuquCvgDogW3sgcmVnZXg6IC/grqrgr4AvLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJQUFwiLCBcIklcIl0gfV0sIC8vIHBpaVxyXG4gICAgICDgrqrgr4E6IFt7IHJlZ2V4OiAv4K6q4K+BLywgbW92ZTogMSwgdmlzZW1lczogW1wiUFBcIiwgXCJVXCJdIH1dLCAvLyBwdVxyXG4gICAgICDgrqrgr4I6IFt7IHJlZ2V4OiAv4K6q4K+CLywgbW92ZTogMSwgdmlzZW1lczogW1wiUFBcIiwgXCJVXCJdIH1dLCAvLyBwdXVcclxuICAgICAg4K6q4K+GOiBbeyByZWdleDogL+CuquCvhi8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlBQXCIsIFwiRVwiXSB9XSwgLy8gcGVcclxuICAgICAg4K6q4K+HOiBbeyByZWdleDogL+CuquCvhy8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlBQXCIsIFwiRVwiXSB9XSwgLy8gcGVlXHJcbiAgICAgIOCuquCviDogW3sgcmVnZXg6IC/grqrgr4gvLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJQUFwiLCBcImFhXCIsIFwiSVwiXSB9XSwgLy8gcGFpXHJcbiAgICAgIOCuquCvijogW3sgcmVnZXg6IC/grqrgr4ovLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJQUFwiLCBcIk9cIl0gfV0sIC8vIHBvXHJcbiAgICAgIOCuquCvizogW3sgcmVnZXg6IC/grqrgr4svLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJQUFwiLCBcIk9cIl0gfV0sIC8vIHBvb1xyXG4gICAgICDgrqrgr4w6IFt7IHJlZ2V4OiAv4K6q4K+MLywgbW92ZTogMSwgdmlzZW1lczogW1wiUFBcIiwgXCJhYVwiLCBcIlVcIl0gfV0sIC8vIHBhdVxyXG5cclxuICAgICAg4K6kOiBbeyByZWdleDogL+CupC8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlRIXCIsIFwiYWFcIl0gfV0sIC8vIHRoYVxyXG4gICAgICDgrqTgrr46IFt7IHJlZ2V4OiAv4K6k4K6+LywgbW92ZTogMSwgdmlzZW1lczogW1wiVEhcIiwgXCJhYVwiXSB9XSwgLy8gdGhhYVxyXG4gICAgICDgrqTgrr86IFt7IHJlZ2V4OiAv4K6k4K6/LywgbW92ZTogMSwgdmlzZW1lczogW1wiVEhcIiwgXCJJXCJdIH1dLCAvLyB0aGlcclxuICAgICAg4K6k4K+AOiBbeyByZWdleDogL+CupOCvgC8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlRIXCIsIFwiSVwiXSB9XSwgLy8gdGhpaVxyXG4gICAgICDgrqTgr4E6IFt7IHJlZ2V4OiAv4K6k4K+BLywgbW92ZTogMSwgdmlzZW1lczogW1wiVEhcIiwgXCJVXCJdIH1dLCAvLyB0aHVcclxuICAgICAg4K6k4K+COiBbeyByZWdleDogL+CupOCvgi8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlRIXCIsIFwiVVwiXSB9XSwgLy8gdGh1dVxyXG4gICAgICDgrqTgr4Y6IFt7IHJlZ2V4OiAv4K6k4K+GLywgbW92ZTogMSwgdmlzZW1lczogW1wiVEhcIiwgXCJFXCJdIH1dLCAvLyB0aGVcclxuICAgICAg4K6k4K+HOiBbeyByZWdleDogL+CupOCvhy8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlRIXCIsIFwiRVwiXSB9XSwgLy8gdGhlZVxyXG4gICAgICDgrqTgr4g6IFt7IHJlZ2V4OiAv4K6k4K+ILywgbW92ZTogMSwgdmlzZW1lczogW1wiVEhcIiwgXCJhYVwiLCBcIklcIl0gfV0sIC8vIHRoYWlcclxuICAgICAg4K6k4K+KOiBbeyByZWdleDogL+CupOCvii8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlRIXCIsIFwiT1wiXSB9XSwgLy8gdGhvXHJcbiAgICAgIOCupOCvizogW3sgcmVnZXg6IC/grqTgr4svLCBtb3ZlOiAxLCB2aXNlbWVzOiBbXCJUSFwiLCBcIk9cIl0gfV0sIC8vIHRob29cclxuICAgICAg4K6k4K+MOiBbeyByZWdleDogL+CupOCvjC8sIG1vdmU6IDEsIHZpc2VtZXM6IFtcIlRIXCIsIFwiYWFcIiwgXCJVXCJdIH1dLCAvLyB0aGF1XHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMudmlzZW1lRHVyYXRpb25zID0ge1xyXG4gICAgICBhYTogMS4wLFxyXG4gICAgICBFOiAwLjksXHJcbiAgICAgIEk6IDAuODUsXHJcbiAgICAgIE86IDAuOTUsXHJcbiAgICAgIFU6IDAuOSxcclxuICAgICAgUFA6IDEuMSxcclxuICAgICAgU1M6IDEuMixcclxuICAgICAgVEg6IDEuMDUsXHJcbiAgICAgIEREOiAxLjEsXHJcbiAgICAgIEZGOiAxLjAsXHJcbiAgICAgIGtrOiAxLjIsXHJcbiAgICAgIG5uOiAwLjksXHJcbiAgICAgIFJSOiAwLjgsXHJcbiAgICAgIENIOiAxLjEsXHJcbiAgICAgIHNpbDogMSxcclxuICAgIH07XHJcblxyXG4gICAgdGhpcy5zcGVjaWFsRHVyYXRpb25zID0ge1xyXG4gICAgICBcIiBcIjogMSxcclxuICAgICAgXCIsXCI6IDMsXHJcbiAgICAgIFwiLVwiOiAwLjUsXHJcbiAgICAgIFwiJ1wiOiAwLjUsXHJcbiAgICAgIFwiLlwiOiA0LFxyXG4gICAgICBcIj9cIjogMy41LFxyXG4gICAgICBcIiFcIjogMy41LFxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBUYW1pbCBudW1iZXIgd29yZHNcclxuICAgIHRoaXMuZGlnaXRzID0gW1xyXG4gICAgICBcIuCuquCvguCunOCvjeCur+CuruCvjVwiLFxyXG4gICAgICBcIuCukuCuqeCvjeCuseCvgVwiLFxyXG4gICAgICBcIuCuh+CusOCuo+CvjeCun+CvgVwiLFxyXG4gICAgICBcIuCuruCvguCuqeCvjeCuseCvgVwiLFxyXG4gICAgICBcIuCuqOCuvuCuqeCvjeCuleCvgVwiLFxyXG4gICAgICBcIuCukOCuqOCvjeCupOCvgVwiLFxyXG4gICAgICBcIuCuhuCuseCvgVwiLFxyXG4gICAgICBcIuCuj+CutOCvgVwiLFxyXG4gICAgICBcIuCujuCun+CvjeCun+CvgVwiLFxyXG4gICAgICBcIuCukuCuqeCvjeCuquCupOCvgVwiLFxyXG4gICAgXTtcclxuICAgIHRoaXMudGVucyA9IFtcclxuICAgICAgXCJcIixcclxuICAgICAgXCLgrqrgrqTgr43grqTgr4FcIixcclxuICAgICAgXCLgrofgrrDgr4HgrqrgrqTgr4FcIixcclxuICAgICAgXCLgrq7gr4Hgrqrgr43grqrgrqTgr4FcIixcclxuICAgICAgXCLgrqjgrr7grrHgr43grqrgrqTgr4FcIixcclxuICAgICAgXCLgrpDgrq7gr43grqrgrqTgr4FcIixcclxuICAgICAgXCLgroXgrrHgr4HgrqrgrqTgr4FcIixcclxuICAgICAgXCLgro7grrTgr4HgrqrgrqTgr4FcIixcclxuICAgICAgXCLgro7grqPgr43grqrgrqTgr4FcIixcclxuICAgICAgXCLgrqTgr4rgrqPgr43grqPgr4LgrrHgr4FcIixcclxuICAgIF07XHJcbiAgICB0aGlzLmh1bmRyZWRzID0gW1xyXG4gICAgICBcIlwiLFxyXG4gICAgICBcIuCuqOCvguCuseCvgVwiLFxyXG4gICAgICBcIuCuh+CusOCvgeCuqOCvguCuseCvgVwiLFxyXG4gICAgICBcIuCuruCvgeCuqOCvjeCuqOCvguCuseCvgVwiLFxyXG4gICAgICBcIuCuqOCuvuCuqeCvguCuseCvgVwiLFxyXG4gICAgICBcIuCukOCuqOCvguCuseCvgVwiLFxyXG4gICAgICBcIuCuheCuseCvgeCuqOCvguCuseCvgVwiLFxyXG4gICAgICBcIuCujuCutOCvgeCuqOCvguCuseCvgVwiLFxyXG4gICAgICBcIuCujuCuo+CvjeCuo+CvguCuseCvgVwiLFxyXG4gICAgICBcIuCupOCviuCus+CvjeCus+CuvuCur+Cuv+CusOCuruCvjVwiLFxyXG4gICAgXTtcclxuICAgIHRoaXMudGhvdXNhbmRzID0gXCLgrobgrq/grr/grrDgrq7gr41cIjtcclxuICAgIHRoaXMubGFraHMgPSBcIuCusuCun+CvjeCumuCuruCvjVwiO1xyXG4gICAgdGhpcy5jcm9yZXMgPSBcIuCuleCvi+Cun+Cuv1wiO1xyXG5cclxuICAgIC8vIFN5bWJvbHMgdG8gVGFtaWxcclxuICAgIHRoaXMuc3ltYm9scyA9IHtcclxuICAgICAgXCIlXCI6IFwi4K6a4K6k4K614K+A4K6k4K6u4K+NXCIsXHJcbiAgICAgIFwi4oKsXCI6IFwi4K6v4K+C4K6w4K+LXCIsXHJcbiAgICAgIFwiJlwiOiBcIuCuruCuseCvjeCuseCvgeCuruCvjVwiLFxyXG4gICAgICBcIitcIjogXCLgrpXgr4Lgrp/gr43grp/grrLgr41cIixcclxuICAgICAgJDogXCLgrp/grr7grrLgrrDgr41cIixcclxuICAgICAgXCLigrlcIjogXCLgrrDgr4Lgrqrgrr7grq/gr41cIixcclxuICAgIH07XHJcbiAgICB0aGlzLnN5bWJvbHNSZWcgPSAvWyXigqwmXFwrXFwk4oK5XS9nO1xyXG4gIH1cclxuXHJcbiAgY29udmVydE51bWJlclRvV29yZHMobnVtKSB7XHJcbiAgICBudW0gPSBwYXJzZUludChudW0pO1xyXG5cclxuICAgIGlmIChudW0gPT0gMCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5kaWdpdHNbMF07XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHdvcmRzID0gXCJcIjtcclxuXHJcbiAgICAvLyBIYW5kbGUgY3JvcmVzICgxMCBtaWxsaW9uKVxyXG4gICAgaWYgKG51bSA+PSAxMDAwMDAwMCkge1xyXG4gICAgICB3b3JkcyArPVxyXG4gICAgICAgIHRoaXMuY29udmVydE51bWJlclRvV29yZHMoTWF0aC5mbG9vcihudW0gLyAxMDAwMDAwMCkpICtcclxuICAgICAgICBcIiBcIiArXHJcbiAgICAgICAgdGhpcy5jcm9yZXMgK1xyXG4gICAgICAgIFwiIFwiO1xyXG4gICAgICBudW0gJT0gMTAwMDAwMDA7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSGFuZGxlIGxha2hzICgxMDAsMDAwKVxyXG4gICAgaWYgKG51bSA+PSAxMDAwMDApIHtcclxuICAgICAgd29yZHMgKz1cclxuICAgICAgICB0aGlzLmNvbnZlcnROdW1iZXJUb1dvcmRzKE1hdGguZmxvb3IobnVtIC8gMTAwMDAwKSkgK1xyXG4gICAgICAgIFwiIFwiICtcclxuICAgICAgICB0aGlzLmxha2hzICtcclxuICAgICAgICBcIiBcIjtcclxuICAgICAgbnVtICU9IDEwMDAwMDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBIYW5kbGUgdGhvdXNhbmRzXHJcbiAgICBpZiAobnVtID49IDEwMDApIHtcclxuICAgICAgd29yZHMgKz1cclxuICAgICAgICB0aGlzLmNvbnZlcnROdW1iZXJUb1dvcmRzKE1hdGguZmxvb3IobnVtIC8gMTAwMCkpICtcclxuICAgICAgICBcIiBcIiArXHJcbiAgICAgICAgdGhpcy50aG91c2FuZHMgK1xyXG4gICAgICAgIFwiIFwiO1xyXG4gICAgICBudW0gJT0gMTAwMDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBIYW5kbGUgaHVuZHJlZHNcclxuICAgIGlmIChudW0gPj0gMTAwKSB7XHJcbiAgICAgIHdvcmRzICs9IHRoaXMuaHVuZHJlZHNbTWF0aC5mbG9vcihudW0gLyAxMDApXSArIFwiIFwiO1xyXG4gICAgICBudW0gJT0gMTAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEhhbmRsZSB0ZW5zXHJcbiAgICBpZiAobnVtID49IDEwICYmIG51bSA8PSAxOSkge1xyXG4gICAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIDExLTE5IGluIFRhbWlsXHJcbiAgICAgIHdvcmRzICs9IHRoaXMuZGlnaXRzW251bSAlIDEwXSArIFwi4K6q4K6k4K6/4K6p4K+NXCIgKyBcIiBcIjtcclxuICAgIH0gZWxzZSBpZiAobnVtID49IDIwKSB7XHJcbiAgICAgIHdvcmRzICs9IHRoaXMudGVuc1tNYXRoLmZsb29yKG51bSAvIDEwKV0gKyBcIiBcIjtcclxuICAgICAgbnVtICU9IDEwO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEhhbmRsZSBvbmVzXHJcbiAgICBpZiAobnVtID4gMCkge1xyXG4gICAgICB3b3JkcyArPSB0aGlzLmRpZ2l0c1tudW1dICsgXCIgXCI7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHdvcmRzLnRyaW0oKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFByZXByb2Nlc3MgdGV4dDpcclxuICAgKiAtIGNvbnZlcnQgc3ltYm9scyB0byB3b3Jkc1xyXG4gICAqIC0gY29udmVydCBudW1iZXJzIHRvIHdvcmRzXHJcbiAgICogLSBmaWx0ZXIgb3V0IGNoYXJhY3RlcnMgdGhhdCBzaG91bGQgYmUgbGVmdCB1bnNwb2tlblxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzIFRleHRcclxuICAgKiBAcmV0dXJuIHtzdHJpbmd9IFByZS1wcm9jZXNzc2VkIHRleHQuXHJcbiAgICovXHJcbiAgcHJlUHJvY2Vzc1RleHQocykge1xyXG4gICAgcmV0dXJuIHNcclxuICAgICAgLnJlcGxhY2UoL1sjXypcIjo7XS9nLCBcIlwiKVxyXG4gICAgICAucmVwbGFjZSh0aGlzLnN5bWJvbHNSZWcsIChzeW1ib2wpID0+IHtcclxuICAgICAgICByZXR1cm4gXCIgXCIgKyB0aGlzLnN5bWJvbHNbc3ltYm9sXSArIFwiIFwiO1xyXG4gICAgICB9KVxyXG4gICAgICAucmVwbGFjZSgvKFxcZClcXC4oXFxkKS9nLCBcIiQxIHBvaW50ICQyXCIpIC8vIE51bWJlciBzZXBhcmF0b3IgKHBvaW50KVxyXG4gICAgICAucmVwbGFjZSgvXFxkKy9nLCB0aGlzLmNvbnZlcnROdW1iZXJUb1dvcmRzLmJpbmQodGhpcykpIC8vIE51bWJlcnMgdG8gd29yZHNcclxuICAgICAgLnJlcGxhY2UoLyhcXEQpXFwxXFwxKy9nLCBcIiQxJDFcIikgLy8gbWF4IDIgcmVwZWF0aW5nIGNoYXJzXHJcbiAgICAgIC5yZXBsYWNlQWxsKFwiICBcIiwgXCIgXCIpIC8vIE9ubHkgb25lIHJlcGVhdGluZyBzcGFjZVxyXG4gICAgICAudHJpbSgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ29udmVydCB3b3JkIHRvIE9jdWx1cyBMaXBTeW5jIFZpc2VtZXMgYW5kIGR1cmF0aW9uc1xyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB3IFRleHRcclxuICAgKiBAcmV0dXJuIHtPYmplY3R9IE9jdWx1cyBMaXBTeW5jIFZpc2VtZXMgYW5kIGR1cmF0aW9ucy5cclxuICAgKi9cclxuICB3b3Jkc1RvVmlzZW1lcyh3KSB7XHJcbiAgICBsZXQgbyA9IHsgd29yZHM6IHcsIHZpc2VtZXM6IFtdLCB0aW1lczogW10sIGR1cmF0aW9uczogW10sIGk6IDAgfTtcclxuICAgIGxldCB0ID0gMDtcclxuXHJcbiAgICBjb25zdCBjaGFycyA9IFsuLi5vLndvcmRzXTtcclxuICAgIHdoaWxlIChvLmkgPCBjaGFycy5sZW5ndGgpIHtcclxuICAgICAgY29uc3QgYyA9IGNoYXJzW28uaV07XHJcbiAgICAgIGNvbnN0IHJ1bGVzZXQgPSB0aGlzLnJ1bGVzW2NdO1xyXG5cclxuICAgICAgaWYgKHJ1bGVzZXQpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJ1bGVzZXQubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGNvbnN0IHJ1bGUgPSBydWxlc2V0W2ldO1xyXG4gICAgICAgICAgY29uc3QgdGVzdCA9XHJcbiAgICAgICAgICAgIG8ud29yZHMuc3Vic3RyaW5nKDAsIG8uaSkgKyBjICsgby53b3Jkcy5zdWJzdHJpbmcoby5pICsgMSk7XHJcbiAgICAgICAgICBsZXQgbWF0Y2hlcyA9IHRlc3QubWF0Y2gocnVsZS5yZWdleCk7XHJcblxyXG4gICAgICAgICAgaWYgKG1hdGNoZXMpIHtcclxuICAgICAgICAgICAgcnVsZS52aXNlbWVzLmZvckVhY2goKHZpc2VtZSkgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAgIG8udmlzZW1lcy5sZW5ndGggJiZcclxuICAgICAgICAgICAgICAgIG8udmlzZW1lc1tvLnZpc2VtZXMubGVuZ3RoIC0gMV0gPT09IHZpc2VtZVxyXG4gICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZCA9IDAuNyAqICh0aGlzLnZpc2VtZUR1cmF0aW9uc1t2aXNlbWVdIHx8IDEpO1xyXG4gICAgICAgICAgICAgICAgby5kdXJhdGlvbnNbby5kdXJhdGlvbnMubGVuZ3RoIC0gMV0gKz0gZDtcclxuICAgICAgICAgICAgICAgIHQgKz0gZDtcclxuICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZCA9IHRoaXMudmlzZW1lRHVyYXRpb25zW3Zpc2VtZV0gfHwgMTtcclxuICAgICAgICAgICAgICAgIG8udmlzZW1lcy5wdXNoKHZpc2VtZSk7XHJcbiAgICAgICAgICAgICAgICBvLnRpbWVzLnB1c2godCk7XHJcbiAgICAgICAgICAgICAgICBvLmR1cmF0aW9ucy5wdXNoKGQpO1xyXG4gICAgICAgICAgICAgICAgdCArPSBkO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIG8uaSArPSBydWxlLm1vdmU7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBvLmkrKztcclxuICAgICAgICB0ICs9IHRoaXMuc3BlY2lhbER1cmF0aW9uc1tjXSB8fCAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG87XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBQcm9jZXNzIHRleHQgdG8gZ2VuZXJhdGUgdmlzZW1lc1xyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0IElucHV0IFRhbWlsIHRleHRcclxuICAgKiBAcmV0dXJuIHtPYmplY3R9IFByb2Nlc3NlZCB2aXNlbWVzIGFuZCB0aW1pbmcgZGF0YVxyXG4gICAqL1xyXG4gIHByb2Nlc3NUZXh0KHRleHQpIHtcclxuICAgIGNvbnN0IHByZXByb2Nlc3NlZCA9IHRoaXMucHJlUHJvY2Vzc1RleHQodGV4dCk7XHJcbiAgICBjb25zdCB3b3JkcyA9IHByZXByb2Nlc3NlZC5zcGxpdChcIiBcIik7XHJcblxyXG4gICAgbGV0IHJlc3VsdCA9IHtcclxuICAgICAgb3JpZ2luYWxUZXh0OiB0ZXh0LFxyXG4gICAgICBwcmVwcm9jZXNzZWRUZXh0OiBwcmVwcm9jZXNzZWQsXHJcbiAgICAgIHdvcmRzOiBbXSxcclxuICAgICAgdmlzZW1lczogW10sXHJcbiAgICAgIHRpbWVzOiBbXSxcclxuICAgICAgZHVyYXRpb25zOiBbXSxcclxuICAgIH07XHJcblxyXG4gICAgbGV0IHRvdGFsVGltZSA9IDA7XHJcblxyXG4gICAgLy8gUHJvY2VzcyBlYWNoIHdvcmRcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgd29yZHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgaWYgKHdvcmRzW2ldLnRyaW0oKSA9PT0gXCJcIikgY29udGludWU7XHJcblxyXG4gICAgICBjb25zdCB3b3JkUmVzdWx0ID0gdGhpcy53b3Jkc1RvVmlzZW1lcyh3b3Jkc1tpXSk7XHJcblxyXG4gICAgICAvLyBBZGQgdGhlIHdvcmQgZGF0YVxyXG4gICAgICByZXN1bHQud29yZHMucHVzaCh7XHJcbiAgICAgICAgdGV4dDogd29yZHNbaV0sXHJcbiAgICAgICAgc3RhcnRUaW1lOiB0b3RhbFRpbWUsXHJcbiAgICAgICAgdmlzZW1lczogd29yZFJlc3VsdC52aXNlbWVzLFxyXG4gICAgICAgIHRpbWVzOiB3b3JkUmVzdWx0LnRpbWVzLm1hcCgodCkgPT4gdCArIHRvdGFsVGltZSksXHJcbiAgICAgICAgZHVyYXRpb25zOiB3b3JkUmVzdWx0LmR1cmF0aW9ucyxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICAvLyBBZGQgd29yZCdzIHZpc2VtZXMgdG8gdGhlIGdsb2JhbCByZXN1bHRcclxuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB3b3JkUmVzdWx0LnZpc2VtZXMubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICByZXN1bHQudmlzZW1lcy5wdXNoKHdvcmRSZXN1bHQudmlzZW1lc1tqXSk7XHJcbiAgICAgICAgcmVzdWx0LnRpbWVzLnB1c2god29yZFJlc3VsdC50aW1lc1tqXSArIHRvdGFsVGltZSk7XHJcbiAgICAgICAgcmVzdWx0LmR1cmF0aW9ucy5wdXNoKHdvcmRSZXN1bHQuZHVyYXRpb25zW2pdKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gQ2FsY3VsYXRlIHdvcmQgZHVyYXRpb25cclxuICAgICAgY29uc3Qgd29yZER1cmF0aW9uID1cclxuICAgICAgICB3b3JkUmVzdWx0LnRpbWVzLmxlbmd0aCA+IDBcclxuICAgICAgICAgID8gd29yZFJlc3VsdC50aW1lc1t3b3JkUmVzdWx0LnRpbWVzLmxlbmd0aCAtIDFdICtcclxuICAgICAgICAgICAgd29yZFJlc3VsdC5kdXJhdGlvbnNbd29yZFJlc3VsdC5kdXJhdGlvbnMubGVuZ3RoIC0gMV1cclxuICAgICAgICAgIDogMDtcclxuXHJcbiAgICAgIHRvdGFsVGltZSArPSB3b3JkRHVyYXRpb24gKyB0aGlzLnNwZWNpYWxEdXJhdGlvbnNbXCIgXCJdOyAvLyBBZGQgd29yZCBzcGFjaW5nXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IExpcHN5bmNFbiwgTGlwc3luY1RhIH07XHJcbiJdLCJuYW1lcyI6WyJMaXBzeW5jRW4iLCJjb252ZXJ0X2RpZ2l0X2J5X2RpZ2l0IiwibnVtIiwibnVtQXJyYXkiLCJzcGxpdCIsIm51bVdvcmRzIiwibSIsImxlbmd0aCIsImRpZ2l0cyIsInN1YnN0cmluZyIsImNvbnZlcnRfc2V0c19vZl90d28iLCJmaXJzdE51bUhhbGYiLCJTdHJpbmciLCJzZWNvbmROdW1IYWxmIiwiY29udmVydF90ZW5zIiwiY29udmVydF9taWxsaW9ucyIsIk51bWJlciIsIk1hdGgiLCJmbG9vciIsInRvU3RyaW5nIiwiY29udmVydF90aG91c2FuZHMiLCJjb252ZXJ0X2h1bmRyZWRzIiwib25lcyIsInN0YXJ0c1dpdGgiLCJ0ZWVucyIsInRlbnMiLCJjb252ZXJ0TnVtYmVyVG9Xb3JkcyIsInByZVByb2Nlc3NUZXh0IiwicyIsInJlcGxhY2UiLCJzeW1ib2xzUmVnIiwic3ltYm9sIiwic3ltYm9scyIsImJpbmQiLCJyZXBsYWNlQWxsIiwibm9ybWFsaXplIiwidHJpbSIsIndvcmRzVG9WaXNlbWVzIiwidyIsIm8iLCJ3b3JkcyIsInRvVXBwZXJDYXNlIiwidmlzZW1lcyIsInRpbWVzIiwiZHVyYXRpb25zIiwiaSIsInQiLCJjaGFycyIsImMiLCJydWxlc2V0IiwicnVsZXMiLCJydWxlIiwidGVzdCIsInRvTG93ZXJDYXNlIiwibWF0Y2hlcyIsIm1hdGNoIiwicmVnZXgiLCJmb3JFYWNoIiwidmlzZW1lIiwiZCIsInZpc2VtZUR1cmF0aW9ucyIsInB1c2giLCJtb3ZlIiwic3BlY2lhbER1cmF0aW9ucyIsImNvbnN0cnVjdG9yIiwiQSIsIkIiLCJDIiwiRCIsIkUiLCJGIiwiRyIsIkgiLCJJIiwiSiIsIksiLCJMIiwiTSIsIk4iLCJPIiwiUCIsIlEiLCJSIiwiUyIsIlQiLCJVIiwiViIsIlciLCJYIiwiWSIsIloiLCJvcHMiLCJPYmplY3QiLCJrZXlzIiwia2V5IiwibWFwIiwicG9zTCIsImluZGV4T2YiLCJwb3NSIiwicG9zRSIsInN0ckxlZnQiLCJzdHJMZXR0ZXJzIiwic3RyUmlnaHQiLCJzdHJWaXNlbWVzIiwiZXhwIiwieCIsImpvaW4iLCJjdHhMZXR0ZXJzIiwiUmVnRXhwIiwiYWEiLCJQUCIsIlNTIiwiVEgiLCJERCIsIkZGIiwia2siLCJubiIsIlJSIiwic2lsIiwiJCIsImVzcGVha1RvT2N1bHVzVmlzZW1lIiwiacuQIiwiyaoiLCJlIiwiw6YiLCJhy5AiLCLJkiIsIsmUy5AiLCLKiiIsInXLkCIsIsqMIiwiyZkiLCJlyaoiLCJhyaoiLCLJlMmqIiwiYcqKIiwib8qKIiwiyarJmSIsImXJmSIsIsqKyZkiLCJwIiwiYiIsImsiLCJnIiwidMqDIiwiZMqSIiwiZiIsInYiLCLOuCIsIsOwIiwieiIsIsqDIiwiypIiLCJoIiwibiIsIsWLIiwibCIsInIiLCLJuSIsIsm+IiwiaiIsIsmRIiwiyZHLkCIsIsmQIiwiyZwiLCLDuCIsInkiLCJly5AiLCLFkyIsIsm2IiwiyZLMgyIsIsOjIiwiw7UiLCLJsiIsIsqOIiwiyo0iLCLDpyIsIsmjIiwizrIiLCLKlCIsIsqVIiwiyawiLCLJriIsIsqiIiwiyqEiLCLJliIsIsmXIiwiyoQiLCLJnyIsIsmgIiwiypsiLCJwdW5jdHVhdGlvbiIsIkxpcHN5bmNUYSIsInBhcnNlSW50IiwiY3JvcmVzIiwibGFraHMiLCJ0aG91c2FuZHMiLCJodW5kcmVkcyIsInByb2Nlc3NUZXh0IiwidGV4dCIsInByZXByb2Nlc3NlZCIsInJlc3VsdCIsIm9yaWdpbmFsVGV4dCIsInByZXByb2Nlc3NlZFRleHQiLCJ0b3RhbFRpbWUiLCJ3b3JkUmVzdWx0Iiwic3RhcnRUaW1lIiwid29yZER1cmF0aW9uIiwi4K6FIiwi4K6GIiwi4K6HIiwi4K6IIiwi4K6JIiwi4K6KIiwi4K6OIiwi4K6PIiwi4K6QIiwi4K6SIiwi4K6TIiwi4K6UIiwi4K6V4K+NIiwi4K6Z4K+NIiwi4K6a4K+NIiwi4K6e4K+NIiwi4K6f4K+NIiwi4K6j4K+NIiwi4K6k4K+NIiwi4K6o4K+NIiwi4K6q4K+NIiwi4K6u4K+NIiwi4K6v4K+NIiwi4K6w4K+NIiwi4K6y4K+NIiwi4K614K+NIiwi4K604K+NIiwi4K6z4K+NIiwi4K6x4K+NIiwi4K6p4K+NIiwi4K6c4K+NIiwi4K634K+NIiwi4K644K+NIiwi4K654K+NIiwi4K6VIiwi4K6V4K6+Iiwi4K6V4K6/Iiwi4K6V4K+AIiwi4K6V4K+BIiwi4K6V4K+CIiwi4K6V4K+GIiwi4K6V4K+HIiwi4K6V4K+IIiwi4K6V4K+KIiwi4K6V4K+LIiwi4K6V4K+MIiwi4K6qIiwi4K6q4K6+Iiwi4K6q4K6/Iiwi4K6q4K+AIiwi4K6q4K+BIiwi4K6q4K+CIiwi4K6q4K+GIiwi4K6q4K+HIiwi4K6q4K+IIiwi4K6q4K+KIiwi4K6q4K+LIiwi4K6q4K+MIiwi4K6kIiwi4K6k4K6+Iiwi4K6k4K6/Iiwi4K6k4K+AIiwi4K6k4K+BIiwi4K6k4K+CIiwi4K6k4K+GIiwi4K6k4K+HIiwi4K6k4K+IIiwi4K6k4K+KIiwi4K6k4K+LIiwi4K6k4K+MIiwiQ0giXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/services/LipSyncProvider.tsx\n"));

/***/ })

});